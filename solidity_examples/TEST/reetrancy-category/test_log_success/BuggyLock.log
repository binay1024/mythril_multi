warning, Solidity 0.5.17 Does not compile in a lot of cases.
find signatures {'deposit': 'deposit()', 'getBalance': 'getBalance(address)', 'transfer': 'transfer(address,uint256)', 'withdrawBalance': 'withdrawBalance()'}
warning, Solidity 0.5.17 Does not compile in a lot of cases.
find signatures {'constructor': 'constructor()', 'attack': 'attack(uint256,bytes)'}
Single analyze mode
setup AttackBridge

=========== Excute 0 TX Loop!!!==========

Now we have 1 open states!!!
output acc 1004753105490295263244812946565948198177742958590 balance: 100000000000000000000
output acc 1271270613000041655817448348132275889066893754095 balance: 100000000000000000000
output acc 51421440056055728346017419001665401074216449311 balance: 100000000000000000000
Starting message call transaction, iteration: 0, 1 initial states
Starting message call transaction to: 1271270613000041655817448348132275889066893754095
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 4 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
Excute 0 TX Loop finish!!!
output the call_chain
++++++++++++++++++++ In 0th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 1th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 2th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 3th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 4th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0

=========== Excute 1 TX Loop!!!==========

Now we have 5 open states!!!
Starting message call transaction, iteration: 1, 5 initial states
Starting message call transaction to: 1271270613000041655817448348132275889066893754095
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 10 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 11 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 12 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 13 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 14 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 15 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
current in attackBridge contract's fallback function, assign new calldata to
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 16 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
Excute 1 TX Loop finish!!!
output the call_chain
++++++++++++++++++++ In 0th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 1th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 2th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 3th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 4th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 5th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 6th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 7th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 8th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 9th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 10th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 11th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 12th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 13th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 14th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 15th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 16th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 17th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 18th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 19th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 20th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 21th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 22th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 23th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 24th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 25th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback_revert'], ['END']]
fallback num is 1
++++++++++++++++++++ In 26th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback_revert'], ['END']]
fallback num is 1
++++++++++++++++++++ In 27th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)_revert'], ['END']]
fallback num is 1
++++++++++++++++++++ In 28th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'getBalance(address)_revert'], ['END']]
fallback num is 1
++++++++++++++++++++ In 29th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'deposit()'], ['END']]
fallback num is 2
++++++++++++++++++++ In 30th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'withdrawBalance()_revert'], ['END']]
fallback num is 1
++++++++++++++++++++ In 31th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 2
++++++++++++++++++++ In 32th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 2
++++++++++++++++++++ In 33th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 2

=========== Excute 2 TX Loop!!!==========

Now we have 34 open states!!!
Starting message call transaction, iteration: 2, 34 initial states
Starting message call transaction to: 1271270613000041655817448348132275889066893754095
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 51 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 52 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 53 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 54 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 55 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 56 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 57 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 58 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 59 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 60 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 61 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 62 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 63 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 64 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 65 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 66 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 67 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 68 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 69 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 70 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 71 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 72 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 73 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 74 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 75 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 76 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 77 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 78 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 79 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 80 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 81 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 82 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 83 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 84 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 85 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 86 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 87 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 88 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 89 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 90 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 91 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 92 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
current in attackBridge contract's fallback function, assign new calldata to
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 93 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
current in attackBridge contract's fallback function, assign new calldata to
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 94 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
current in attackBridge contract's fallback function, assign new calldata to
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 95 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
current in attackBridge contract's fallback function, assign new calldata to
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 96 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
current in attackBridge contract's fallback function, assign new calldata to
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 97 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
current in attackBridge contract's fallback function, assign new calldata to
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 98 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
current in attackBridge contract's fallback function, assign new calldata to
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 99 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
current in attackBridge contract's fallback function, assign new calldata to
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 100 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
Excute 2 TX Loop finish!!!
output the call_chain
++++++++++++++++++++ In 0th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 1th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 2th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 3th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 4th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 5th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 6th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 7th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 8th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 9th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 10th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 11th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 12th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 13th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 14th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 15th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 16th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 17th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 18th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 19th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 20th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 21th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 22th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 23th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 24th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 25th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback_revert'], ['END']]
fallback num is 1
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 26th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback_revert'], ['END']]
fallback num is 1
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 27th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)_revert'], ['END']]
fallback num is 1
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 28th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'getBalance(address)_revert'], ['END']]
fallback num is 1
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 29th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'deposit()'], ['END']]
fallback num is 2
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 30th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'withdrawBalance()_revert'], ['END']]
fallback num is 1
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 31th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 2
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 32th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 2
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 33th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 2
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 34th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 35th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 36th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 37th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 38th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 39th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 40th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 41th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 42th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 43th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 44th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 45th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 46th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 47th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 48th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 49th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 50th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 51th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 52th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 53th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 54th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 55th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 56th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 57th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 58th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 59th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback_revert'], ['END']]
fallback num is 1
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 60th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback_revert'], ['END']]
fallback num is 1
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 61th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)_revert'], ['END']]
fallback num is 1
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 62th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'getBalance(address)_revert'], ['END']]
fallback num is 1
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 63th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'deposit()'], ['END']]
fallback num is 2
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 64th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'withdrawBalance()_revert'], ['END']]
fallback num is 1
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 65th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 2
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 66th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 2
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 67th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 2
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
++++++++++++++++++++ In 68th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 69th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 70th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 71th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 72th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 73th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 74th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 75th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 76th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 77th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 78th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 79th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 80th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 81th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 82th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 83th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 84th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 85th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 86th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 87th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 88th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 89th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 90th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 91th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 92th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 93th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback_revert'], ['END']]
fallback num is 1
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 94th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback_revert'], ['END']]
fallback num is 1
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 95th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)_revert'], ['END']]
fallback num is 1
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 96th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'getBalance(address)_revert'], ['END']]
fallback num is 1
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 97th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'deposit()'], ['END']]
fallback num is 2
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 98th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'withdrawBalance()_revert'], ['END']]
fallback num is 1
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 99th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 2
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 100th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 2
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 101th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 2
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 102th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 103th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 104th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 105th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 106th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 107th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 108th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 109th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 110th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 111th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 112th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 113th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 114th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 115th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 116th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 117th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 118th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 119th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 120th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 121th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 122th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 123th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 124th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 125th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 126th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 127th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback_revert'], ['END']]
fallback num is 1
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 128th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback_revert'], ['END']]
fallback num is 1
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 129th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)_revert'], ['END']]
fallback num is 1
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 130th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'getBalance(address)_revert'], ['END']]
fallback num is 1
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 131th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'deposit()'], ['END']]
fallback num is 2
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 132th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'withdrawBalance()_revert'], ['END']]
fallback num is 1
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 133th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 2
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 134th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 2
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 135th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 2
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 136th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 137th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 138th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 139th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 140th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 141th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 142th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 143th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 144th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 145th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 146th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 147th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 148th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 149th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 150th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 151th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 152th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 153th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 154th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 155th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 156th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 157th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 158th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 159th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 160th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 161th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback_revert'], ['END']]
fallback num is 1
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 162th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback_revert'], ['END']]
fallback num is 1
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 163th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)_revert'], ['END']]
fallback num is 1
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 164th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'getBalance(address)_revert'], ['END']]
fallback num is 1
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 165th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'deposit()'], ['END']]
fallback num is 2
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 166th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'withdrawBalance()_revert'], ['END']]
fallback num is 1
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 167th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 2
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 168th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 2
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 169th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 2
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
++++++++++++++++++++ In 170th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback_revert'], ['END']]
fallback num is 1
++++++++++++++++++++ In 171th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback_revert'], ['END']]
fallback num is 1
++++++++++++++++++++ In 172th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback_revert'], ['END']]
fallback num is 1
++++++++++++++++++++ In 173th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback_revert'], ['END']]
fallback num is 1
++++++++++++++++++++ In 174th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback_revert'], ['END']]
fallback num is 1
++++++++++++++++++++ In 175th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback_revert'], ['END']]
fallback num is 1
++++++++++++++++++++ In 176th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback_revert'], ['END']]
fallback num is 1
++++++++++++++++++++ In 177th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback_revert'], ['END']]
fallback num is 1
++++++++++++++++++++ In 178th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback_revert'], ['END']]
fallback num is 1
++++++++++++++++++++ In 179th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback_revert'], ['END']]
fallback num is 1
++++++++++++++++++++ In 180th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback_revert'], ['END']]
fallback num is 1
++++++++++++++++++++ In 181th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback_revert'], ['END']]
fallback num is 1
++++++++++++++++++++ In 182th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback_revert'], ['END']]
fallback num is 1
++++++++++++++++++++ In 183th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback_revert'], ['END']]
fallback num is 1
++++++++++++++++++++ In 184th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback_revert'], ['END']]
fallback num is 1
++++++++++++++++++++ In 185th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback_revert'], ['END']]
fallback num is 1
++++++++++++++++++++ In 186th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)_revert'], ['END']]
fallback num is 1
++++++++++++++++++++ In 187th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)_revert'], ['END']]
fallback num is 1
++++++++++++++++++++ In 188th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)_revert'], ['END']]
fallback num is 1
++++++++++++++++++++ In 189th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)_revert'], ['END']]
fallback num is 1
++++++++++++++++++++ In 190th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)_revert'], ['END']]
fallback num is 1
++++++++++++++++++++ In 191th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)_revert'], ['END']]
fallback num is 1
++++++++++++++++++++ In 192th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)_revert'], ['END']]
fallback num is 1
++++++++++++++++++++ In 193th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)_revert'], ['END']]
fallback num is 1
++++++++++++++++++++ In 194th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'getBalance(address)_revert'], ['END']]
fallback num is 1
++++++++++++++++++++ In 195th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'getBalance(address)_revert'], ['END']]
fallback num is 1
++++++++++++++++++++ In 196th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'getBalance(address)_revert'], ['END']]
fallback num is 1
++++++++++++++++++++ In 197th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'getBalance(address)_revert'], ['END']]
fallback num is 1
++++++++++++++++++++ In 198th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'getBalance(address)_revert'], ['END']]
fallback num is 1
++++++++++++++++++++ In 199th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'getBalance(address)_revert'], ['END']]
fallback num is 1
++++++++++++++++++++ In 200th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'getBalance(address)_revert'], ['END']]
fallback num is 1
++++++++++++++++++++ In 201th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'getBalance(address)_revert'], ['END']]
fallback num is 1
++++++++++++++++++++ In 202th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'deposit()'], ['END']]
fallback num is 2
++++++++++++++++++++ In 203th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'withdrawBalance()_revert'], ['END']]
fallback num is 1
++++++++++++++++++++ In 204th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'deposit()'], ['END']]
fallback num is 2
++++++++++++++++++++ In 205th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'withdrawBalance()_revert'], ['END']]
fallback num is 1
++++++++++++++++++++ In 206th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'deposit()'], ['END']]
fallback num is 2
++++++++++++++++++++ In 207th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'withdrawBalance()_revert'], ['END']]
fallback num is 1
++++++++++++++++++++ In 208th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'deposit()'], ['END']]
fallback num is 2
++++++++++++++++++++ In 209th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'withdrawBalance()_revert'], ['END']]
fallback num is 1
++++++++++++++++++++ In 210th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'deposit()'], ['END']]
fallback num is 2
++++++++++++++++++++ In 211th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'withdrawBalance()_revert'], ['END']]
fallback num is 1
++++++++++++++++++++ In 212th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'deposit()'], ['END']]
fallback num is 2
++++++++++++++++++++ In 213th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'withdrawBalance()_revert'], ['END']]
fallback num is 1
++++++++++++++++++++ In 214th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'deposit()'], ['END']]
fallback num is 2
++++++++++++++++++++ In 215th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'withdrawBalance()_revert'], ['END']]
fallback num is 1
++++++++++++++++++++ In 216th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'deposit()'], ['END']]
fallback num is 2
++++++++++++++++++++ In 217th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'withdrawBalance()_revert'], ['END']]
fallback num is 1
++++++++++++++++++++ In 218th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 2
++++++++++++++++++++ In 219th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 2
++++++++++++++++++++ In 220th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 2
++++++++++++++++++++ In 221th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 2
++++++++++++++++++++ In 222th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 2
++++++++++++++++++++ In 223th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 2
++++++++++++++++++++ In 224th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 2
++++++++++++++++++++ In 225th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 2
++++++++++++++++++++ In 226th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 2
++++++++++++++++++++ In 227th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 2
++++++++++++++++++++ In 228th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 2
++++++++++++++++++++ In 229th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 2
++++++++++++++++++++ In 230th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 2
++++++++++++++++++++ In 231th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 2
++++++++++++++++++++ In 232th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 2
++++++++++++++++++++ In 233th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 2
++++++++++++++++++++ In 234th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 2
++++++++++++++++++++ In 235th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 2
++++++++++++++++++++ In 236th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 2
++++++++++++++++++++ In 237th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 2
++++++++++++++++++++ In 238th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 2
++++++++++++++++++++ In 239th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 2
++++++++++++++++++++ In 240th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 2
++++++++++++++++++++ In 241th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
fallback num is 0
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
fallback num is 0
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
fallback num is 0
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 0
    -------- output 4th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
fallback num is 2
Finished symbolic execution


================ Print openstates call_chain ================
print 0th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
----------------------------------------------------
print 1th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
----------------------------------------------------
print 2th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
----------------------------------------------------
print 3th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
----------------------------------------------------
print 4th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
----------------------------------------------------
print 5th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
----------------------------------------------------
print 6th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
----------------------------------------------------
print 7th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
----------------------------------------------------
print 8th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
----------------------------------------------------
print 9th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
----------------------------------------------------
print 10th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
----------------------------------------------------
print 11th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
----------------------------------------------------
print 12th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
----------------------------------------------------
print 13th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
----------------------------------------------------
print 14th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
----------------------------------------------------
print 15th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
----------------------------------------------------
print 16th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
----------------------------------------------------
print 17th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
----------------------------------------------------
print 18th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
----------------------------------------------------
print 19th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
----------------------------------------------------
print 20th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
----------------------------------------------------
print 21th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
----------------------------------------------------
print 22th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
----------------------------------------------------
print 23th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
----------------------------------------------------
print 24th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
----------------------------------------------------
print 25th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
----------------------------------------------------
print 26th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
----------------------------------------------------
print 27th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
----------------------------------------------------
print 28th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
----------------------------------------------------
print 29th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
----------------------------------------------------
print 30th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
----------------------------------------------------
print 31th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
----------------------------------------------------
print 32th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
----------------------------------------------------
print 33th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'deposit()'], ['END']]
----------------------------------------------------
print 34th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
----------------------------------------------------
print 35th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
----------------------------------------------------
print 36th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
----------------------------------------------------
print 37th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
----------------------------------------------------
print 38th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
----------------------------------------------------
print 39th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
----------------------------------------------------
print 40th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
----------------------------------------------------
print 41th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
----------------------------------------------------
print 42th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
----------------------------------------------------
print 43th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
----------------------------------------------------
print 44th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
----------------------------------------------------
print 45th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
----------------------------------------------------
print 46th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
----------------------------------------------------
print 47th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
----------------------------------------------------
print 48th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
----------------------------------------------------
print 49th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
----------------------------------------------------
print 50th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
----------------------------------------------------
print 51th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
----------------------------------------------------
print 52th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
----------------------------------------------------
print 53th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
----------------------------------------------------
print 54th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
----------------------------------------------------
print 55th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
----------------------------------------------------
print 56th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
----------------------------------------------------
print 57th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
----------------------------------------------------
print 58th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
----------------------------------------------------
print 59th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
----------------------------------------------------
print 60th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
----------------------------------------------------
print 61th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
----------------------------------------------------
print 62th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
----------------------------------------------------
print 63th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
----------------------------------------------------
print 64th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
----------------------------------------------------
print 65th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
----------------------------------------------------
print 66th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
----------------------------------------------------
print 67th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END']]
----------------------------------------------------
print 68th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 69th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 70th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 71th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 72th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 73th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 74th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 75th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 76th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 77th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 78th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 79th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 80th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 81th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 82th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 83th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 84th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 85th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 86th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 87th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 88th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 89th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 90th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 91th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 92th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 93th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 94th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 95th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 96th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 97th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 98th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 99th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 100th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 101th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 102th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
----------------------------------------------------
print 103th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
----------------------------------------------------
print 104th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
----------------------------------------------------
print 105th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
----------------------------------------------------
print 106th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
----------------------------------------------------
print 107th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
----------------------------------------------------
print 108th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
----------------------------------------------------
print 109th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
----------------------------------------------------
print 110th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
----------------------------------------------------
print 111th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
----------------------------------------------------
print 112th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
----------------------------------------------------
print 113th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
----------------------------------------------------
print 114th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
----------------------------------------------------
print 115th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
----------------------------------------------------
print 116th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
----------------------------------------------------
print 117th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
----------------------------------------------------
print 118th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
----------------------------------------------------
print 119th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
----------------------------------------------------
print 120th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
----------------------------------------------------
print 121th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
----------------------------------------------------
print 122th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
----------------------------------------------------
print 123th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
----------------------------------------------------
print 124th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
----------------------------------------------------
print 125th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
----------------------------------------------------
print 126th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
----------------------------------------------------
print 127th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
----------------------------------------------------
print 128th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
----------------------------------------------------
print 129th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
----------------------------------------------------
print 130th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
----------------------------------------------------
print 131th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
----------------------------------------------------
print 132th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
----------------------------------------------------
print 133th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
----------------------------------------------------
print 134th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
----------------------------------------------------
print 135th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'getBalance(address)'], ['END']]
----------------------------------------------------
print 136th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 137th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 138th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 139th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 140th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 141th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 142th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 143th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 144th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 145th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 146th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 147th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 148th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 149th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 150th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 151th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 152th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 153th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 154th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 155th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 156th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 157th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 158th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 159th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 160th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 161th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 162th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 163th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 164th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 165th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 166th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 167th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 168th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 169th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 170th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback_revert'], ['END']]
----------------------------------------------------
print 171th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback_revert'], ['END']]
----------------------------------------------------
print 172th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback_revert'], ['END']]
----------------------------------------------------
print 173th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback_revert'], ['END']]
----------------------------------------------------
print 174th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback_revert'], ['END']]
----------------------------------------------------
print 175th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback_revert'], ['END']]
----------------------------------------------------
print 176th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback_revert'], ['END']]
----------------------------------------------------
print 177th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback_revert'], ['END']]
----------------------------------------------------
print 178th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback_revert'], ['END']]
----------------------------------------------------
print 179th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback_revert'], ['END']]
----------------------------------------------------
print 180th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback_revert'], ['END']]
----------------------------------------------------
print 181th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback_revert'], ['END']]
----------------------------------------------------
print 182th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback_revert'], ['END']]
----------------------------------------------------
print 183th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback_revert'], ['END']]
----------------------------------------------------
print 184th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback_revert'], ['END']]
----------------------------------------------------
print 185th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback_revert'], ['END']]
----------------------------------------------------
print 186th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)_revert'], ['END']]
----------------------------------------------------
print 187th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)_revert'], ['END']]
----------------------------------------------------
print 188th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)_revert'], ['END']]
----------------------------------------------------
print 189th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)_revert'], ['END']]
----------------------------------------------------
print 190th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)_revert'], ['END']]
----------------------------------------------------
print 191th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)_revert'], ['END']]
----------------------------------------------------
print 192th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)_revert'], ['END']]
----------------------------------------------------
print 193th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)_revert'], ['END']]
----------------------------------------------------
print 194th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'getBalance(address)_revert'], ['END']]
----------------------------------------------------
print 195th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'getBalance(address)_revert'], ['END']]
----------------------------------------------------
print 196th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'getBalance(address)_revert'], ['END']]
----------------------------------------------------
print 197th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'getBalance(address)_revert'], ['END']]
----------------------------------------------------
print 198th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'getBalance(address)_revert'], ['END']]
----------------------------------------------------
print 199th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'getBalance(address)_revert'], ['END']]
----------------------------------------------------
print 200th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'getBalance(address)_revert'], ['END']]
----------------------------------------------------
print 201th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'getBalance(address)_revert'], ['END']]
----------------------------------------------------
print 202th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'deposit()'], ['END']]
----------------------------------------------------
print 203th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'withdrawBalance()_revert'], ['END']]
----------------------------------------------------
print 204th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'deposit()'], ['END']]
----------------------------------------------------
print 205th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'withdrawBalance()_revert'], ['END']]
----------------------------------------------------
print 206th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'deposit()'], ['END']]
----------------------------------------------------
print 207th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'withdrawBalance()_revert'], ['END']]
----------------------------------------------------
print 208th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'deposit()'], ['END']]
----------------------------------------------------
print 209th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'withdrawBalance()_revert'], ['END']]
----------------------------------------------------
print 210th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'deposit()'], ['END']]
----------------------------------------------------
print 211th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'withdrawBalance()_revert'], ['END']]
----------------------------------------------------
print 212th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'deposit()'], ['END']]
----------------------------------------------------
print 213th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'withdrawBalance()_revert'], ['END']]
----------------------------------------------------
print 214th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'deposit()'], ['END']]
----------------------------------------------------
print 215th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'withdrawBalance()_revert'], ['END']]
----------------------------------------------------
print 216th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'deposit()'], ['END']]
----------------------------------------------------
print 217th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback_revert'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'withdrawBalance()_revert'], ['END']]
----------------------------------------------------
print 218th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 219th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 220th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 221th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 222th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 223th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 224th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 225th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 226th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'getBalance(address)'], ['END']]
----------------------------------------------------
print 227th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'getBalance(address)'], ['END']]
----------------------------------------------------
print 228th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'getBalance(address)'], ['END']]
----------------------------------------------------
print 229th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'getBalance(address)'], ['END']]
----------------------------------------------------
print 230th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'getBalance(address)'], ['END']]
----------------------------------------------------
print 231th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'getBalance(address)'], ['END']]
----------------------------------------------------
print 232th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'getBalance(address)'], ['END']]
----------------------------------------------------
print 233th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'getBalance(address)'], ['END']]
----------------------------------------------------
print 234th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 235th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 236th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 237th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 238th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 239th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 240th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------
print 241th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack(uint256,bytes)'], ['END'], 
['START'], ['AttackBridge', 'attack(uint256,bytes)'], ['MAIN', 'withdrawBalance()'], ['END'], 
['START'], ['MAIN', 'withdrawBalance()'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'many_msg_babbage(bytes1) or transfer(address,uint256)'], ['END']]
----------------------------------------------------


================ Print openstates call_chain finish ================
print report in [0]th open_state
The analysis was completed successfully. No issues were detected.

print report in [1]th open_state
The analysis was completed successfully. No issues were detected.

print report in [2]th open_state
The analysis was completed successfully. No issues were detected.

print report in [3]th open_state
The analysis was completed successfully. No issues were detected.

print report in [4]th open_state
The analysis was completed successfully. No issues were detected.

print report in [5]th open_state
The analysis was completed successfully. No issues were detected.

print report in [6]th open_state
The analysis was completed successfully. No issues were detected.

print report in [7]th open_state
The analysis was completed successfully. No issues were detected.

print report in [8]th open_state
The analysis was completed successfully. No issues were detected.

print report in [9]th open_state
The analysis was completed successfully. No issues were detected.

print report in [10]th open_state
The analysis was completed successfully. No issues were detected.

print report in [11]th open_state
The analysis was completed successfully. No issues were detected.

print report in [12]th open_state
The analysis was completed successfully. No issues were detected.

print report in [13]th open_state
The analysis was completed successfully. No issues were detected.

print report in [14]th open_state
The analysis was completed successfully. No issues were detected.

print report in [15]th open_state
The analysis was completed successfully. No issues were detected.

print report in [16]th open_state
The analysis was completed successfully. No issues were detected.

print report in [17]th open_state
The analysis was completed successfully. No issues were detected.

print report in [18]th open_state
The analysis was completed successfully. No issues were detected.

print report in [19]th open_state
The analysis was completed successfully. No issues were detected.

print report in [20]th open_state
The analysis was completed successfully. No issues were detected.

print report in [21]th open_state
The analysis was completed successfully. No issues were detected.

print report in [22]th open_state
The analysis was completed successfully. No issues were detected.

print report in [23]th open_state
The analysis was completed successfully. No issues were detected.

print report in [24]th open_state
The analysis was completed successfully. No issues were detected.

print report in [25]th open_state
The analysis was completed successfully. No issues were detected.

print report in [26]th open_state
The analysis was completed successfully. No issues were detected.

print report in [27]th open_state
The analysis was completed successfully. No issues were detected.

print report in [28]th open_state
The analysis was completed successfully. No issues were detected.

print report in [29]th open_state
The analysis was completed successfully. No issues were detected.

print report in [30]th open_state
The analysis was completed successfully. No issues were detected.

print report in [31]th open_state
The analysis was completed successfully. No issues were detected.

print report in [32]th open_state
The analysis was completed successfully. No issues were detected.

print report in [33]th open_state
The analysis was completed successfully. No issues were detected.

print report in [34]th open_state
The analysis was completed successfully. No issues were detected.

print report in [35]th open_state
The analysis was completed successfully. No issues were detected.

print report in [36]th open_state
The analysis was completed successfully. No issues were detected.

print report in [37]th open_state
The analysis was completed successfully. No issues were detected.

print report in [38]th open_state
The analysis was completed successfully. No issues were detected.

print report in [39]th open_state
The analysis was completed successfully. No issues were detected.

print report in [40]th open_state
The analysis was completed successfully. No issues were detected.

print report in [41]th open_state
The analysis was completed successfully. No issues were detected.

print report in [42]th open_state
The analysis was completed successfully. No issues were detected.

print report in [43]th open_state
The analysis was completed successfully. No issues were detected.

print report in [44]th open_state
The analysis was completed successfully. No issues were detected.

print report in [45]th open_state
The analysis was completed successfully. No issues were detected.

print report in [46]th open_state
The analysis was completed successfully. No issues were detected.

print report in [47]th open_state
The analysis was completed successfully. No issues were detected.

print report in [48]th open_state
The analysis was completed successfully. No issues were detected.

print report in [49]th open_state
The analysis was completed successfully. No issues were detected.

print report in [50]th open_state
The analysis was completed successfully. No issues were detected.

print report in [51]th open_state
The analysis was completed successfully. No issues were detected.

print report in [52]th open_state
The analysis was completed successfully. No issues were detected.

print report in [53]th open_state
The analysis was completed successfully. No issues were detected.

print report in [54]th open_state
The analysis was completed successfully. No issues were detected.

print report in [55]th open_state
The analysis was completed successfully. No issues were detected.

print report in [56]th open_state
The analysis was completed successfully. No issues were detected.

print report in [57]th open_state
The analysis was completed successfully. No issues were detected.

print report in [58]th open_state
The analysis was completed successfully. No issues were detected.

print report in [59]th open_state
The analysis was completed successfully. No issues were detected.

print report in [60]th open_state
The analysis was completed successfully. No issues were detected.

print report in [61]th open_state
The analysis was completed successfully. No issues were detected.

print report in [62]th open_state
The analysis was completed successfully. No issues were detected.

print report in [63]th open_state
The analysis was completed successfully. No issues were detected.

print report in [64]th open_state
The analysis was completed successfully. No issues were detected.

print report in [65]th open_state
The analysis was completed successfully. No issues were detected.

print report in [66]th open_state
The analysis was completed successfully. No issues were detected.

print report in [67]th open_state
The analysis was completed successfully. No issues were detected.

print report in [68]th open_state
The analysis was completed successfully. No issues were detected.

print report in [69]th open_state
The analysis was completed successfully. No issues were detected.

print report in [70]th open_state
The analysis was completed successfully. No issues were detected.

print report in [71]th open_state
The analysis was completed successfully. No issues were detected.

print report in [72]th open_state
The analysis was completed successfully. No issues were detected.

print report in [73]th open_state
The analysis was completed successfully. No issues were detected.

print report in [74]th open_state
The analysis was completed successfully. No issues were detected.

print report in [75]th open_state
The analysis was completed successfully. No issues were detected.

print report in [76]th open_state
The analysis was completed successfully. No issues were detected.

print report in [77]th open_state
The analysis was completed successfully. No issues were detected.

print report in [78]th open_state
The analysis was completed successfully. No issues were detected.

print report in [79]th open_state
The analysis was completed successfully. No issues were detected.

print report in [80]th open_state
The analysis was completed successfully. No issues were detected.

print report in [81]th open_state
The analysis was completed successfully. No issues were detected.

print report in [82]th open_state
The analysis was completed successfully. No issues were detected.

print report in [83]th open_state
The analysis was completed successfully. No issues were detected.

print report in [84]th open_state
The analysis was completed successfully. No issues were detected.

print report in [85]th open_state
The analysis was completed successfully. No issues were detected.

print report in [86]th open_state
The analysis was completed successfully. No issues were detected.

print report in [87]th open_state
The analysis was completed successfully. No issues were detected.

print report in [88]th open_state
The analysis was completed successfully. No issues were detected.

print report in [89]th open_state
The analysis was completed successfully. No issues were detected.

print report in [90]th open_state
The analysis was completed successfully. No issues were detected.

print report in [91]th open_state
The analysis was completed successfully. No issues were detected.

print report in [92]th open_state
The analysis was completed successfully. No issues were detected.

print report in [93]th open_state
The analysis was completed successfully. No issues were detected.

print report in [94]th open_state
The analysis was completed successfully. No issues were detected.

print report in [95]th open_state
The analysis was completed successfully. No issues were detected.

print report in [96]th open_state
The analysis was completed successfully. No issues were detected.

print report in [97]th open_state
The analysis was completed successfully. No issues were detected.

print report in [98]th open_state
The analysis was completed successfully. No issues were detected.

print report in [99]th open_state
The analysis was completed successfully. No issues were detected.

print report in [100]th open_state
The analysis was completed successfully. No issues were detected.

print report in [101]th open_state
The analysis was completed successfully. No issues were detected.

print report in [102]th open_state
The analysis was completed successfully. No issues were detected.

print report in [103]th open_state
The analysis was completed successfully. No issues were detected.

print report in [104]th open_state
The analysis was completed successfully. No issues were detected.

print report in [105]th open_state
The analysis was completed successfully. No issues were detected.

print report in [106]th open_state
The analysis was completed successfully. No issues were detected.

print report in [107]th open_state
The analysis was completed successfully. No issues were detected.

print report in [108]th open_state
The analysis was completed successfully. No issues were detected.

print report in [109]th open_state
The analysis was completed successfully. No issues were detected.

print report in [110]th open_state
The analysis was completed successfully. No issues were detected.

print report in [111]th open_state
The analysis was completed successfully. No issues were detected.

print report in [112]th open_state
The analysis was completed successfully. No issues were detected.

print report in [113]th open_state
The analysis was completed successfully. No issues were detected.

print report in [114]th open_state
The analysis was completed successfully. No issues were detected.

print report in [115]th open_state
The analysis was completed successfully. No issues were detected.

print report in [116]th open_state
The analysis was completed successfully. No issues were detected.

print report in [117]th open_state
The analysis was completed successfully. No issues were detected.

print report in [118]th open_state
The analysis was completed successfully. No issues were detected.

print report in [119]th open_state
The analysis was completed successfully. No issues were detected.

print report in [120]th open_state
The analysis was completed successfully. No issues were detected.

print report in [121]th open_state
The analysis was completed successfully. No issues were detected.

print report in [122]th open_state
The analysis was completed successfully. No issues were detected.

print report in [123]th open_state
The analysis was completed successfully. No issues were detected.

print report in [124]th open_state
The analysis was completed successfully. No issues were detected.

print report in [125]th open_state
The analysis was completed successfully. No issues were detected.

print report in [126]th open_state
The analysis was completed successfully. No issues were detected.

print report in [127]th open_state
The analysis was completed successfully. No issues were detected.

print report in [128]th open_state
The analysis was completed successfully. No issues were detected.

print report in [129]th open_state
The analysis was completed successfully. No issues were detected.

print report in [130]th open_state
The analysis was completed successfully. No issues were detected.

print report in [131]th open_state
The analysis was completed successfully. No issues were detected.

print report in [132]th open_state
The analysis was completed successfully. No issues were detected.

print report in [133]th open_state
The analysis was completed successfully. No issues were detected.

print report in [134]th open_state
The analysis was completed successfully. No issues were detected.

print report in [135]th open_state
The analysis was completed successfully. No issues were detected.

print report in [136]th open_state
The analysis was completed successfully. No issues were detected.

print report in [137]th open_state
The analysis was completed successfully. No issues were detected.

print report in [138]th open_state
The analysis was completed successfully. No issues were detected.

print report in [139]th open_state
The analysis was completed successfully. No issues were detected.

print report in [140]th open_state
The analysis was completed successfully. No issues were detected.

print report in [141]th open_state
The analysis was completed successfully. No issues were detected.

print report in [142]th open_state
The analysis was completed successfully. No issues were detected.

print report in [143]th open_state
The analysis was completed successfully. No issues were detected.

print report in [144]th open_state
The analysis was completed successfully. No issues were detected.

print report in [145]th open_state
The analysis was completed successfully. No issues were detected.

print report in [146]th open_state
The analysis was completed successfully. No issues were detected.

print report in [147]th open_state
The analysis was completed successfully. No issues were detected.

print report in [148]th open_state
The analysis was completed successfully. No issues were detected.

print report in [149]th open_state
The analysis was completed successfully. No issues were detected.

print report in [150]th open_state
The analysis was completed successfully. No issues were detected.

print report in [151]th open_state
The analysis was completed successfully. No issues were detected.

print report in [152]th open_state
The analysis was completed successfully. No issues were detected.

print report in [153]th open_state
The analysis was completed successfully. No issues were detected.

print report in [154]th open_state
The analysis was completed successfully. No issues were detected.

print report in [155]th open_state
The analysis was completed successfully. No issues were detected.

print report in [156]th open_state
The analysis was completed successfully. No issues were detected.

print report in [157]th open_state
The analysis was completed successfully. No issues were detected.

print report in [158]th open_state
The analysis was completed successfully. No issues were detected.

print report in [159]th open_state
The analysis was completed successfully. No issues were detected.

print report in [160]th open_state
The analysis was completed successfully. No issues were detected.

print report in [161]th open_state
The analysis was completed successfully. No issues were detected.

print report in [162]th open_state
The analysis was completed successfully. No issues were detected.

print report in [163]th open_state
The analysis was completed successfully. No issues were detected.

print report in [164]th open_state
The analysis was completed successfully. No issues were detected.

print report in [165]th open_state
The analysis was completed successfully. No issues were detected.

print report in [166]th open_state
The analysis was completed successfully. No issues were detected.

print report in [167]th open_state
The analysis was completed successfully. No issues were detected.

print report in [168]th open_state
The analysis was completed successfully. No issues were detected.

print report in [169]th open_state
The analysis was completed successfully. No issues were detected.

print report in [170]th open_state
The analysis was completed successfully. No issues were detected.

print report in [171]th open_state
The analysis was completed successfully. No issues were detected.

print report in [172]th open_state
The analysis was completed successfully. No issues were detected.

print report in [173]th open_state
The analysis was completed successfully. No issues were detected.

print report in [174]th open_state
The analysis was completed successfully. No issues were detected.

print report in [175]th open_state
The analysis was completed successfully. No issues were detected.

print report in [176]th open_state
The analysis was completed successfully. No issues were detected.

print report in [177]th open_state
The analysis was completed successfully. No issues were detected.

print report in [178]th open_state
The analysis was completed successfully. No issues were detected.

print report in [179]th open_state
The analysis was completed successfully. No issues were detected.

print report in [180]th open_state
The analysis was completed successfully. No issues were detected.

print report in [181]th open_state
The analysis was completed successfully. No issues were detected.

print report in [182]th open_state
The analysis was completed successfully. No issues were detected.

print report in [183]th open_state
The analysis was completed successfully. No issues were detected.

print report in [184]th open_state
The analysis was completed successfully. No issues were detected.

print report in [185]th open_state
The analysis was completed successfully. No issues were detected.

print report in [186]th open_state
The analysis was completed successfully. No issues were detected.

print report in [187]th open_state
The analysis was completed successfully. No issues were detected.

print report in [188]th open_state
The analysis was completed successfully. No issues were detected.

print report in [189]th open_state
The analysis was completed successfully. No issues were detected.

print report in [190]th open_state
The analysis was completed successfully. No issues were detected.

print report in [191]th open_state
The analysis was completed successfully. No issues were detected.

print report in [192]th open_state
The analysis was completed successfully. No issues were detected.

print report in [193]th open_state
The analysis was completed successfully. No issues were detected.

print report in [194]th open_state
The analysis was completed successfully. No issues were detected.

print report in [195]th open_state
The analysis was completed successfully. No issues were detected.

print report in [196]th open_state
The analysis was completed successfully. No issues were detected.

print report in [197]th open_state
The analysis was completed successfully. No issues were detected.

print report in [198]th open_state
The analysis was completed successfully. No issues were detected.

print report in [199]th open_state
The analysis was completed successfully. No issues were detected.

print report in [200]th open_state
The analysis was completed successfully. No issues were detected.

print report in [201]th open_state
The analysis was completed successfully. No issues were detected.

print report in [202]th open_state
The analysis was completed successfully. No issues were detected.

print report in [203]th open_state
The analysis was completed successfully. No issues were detected.

print report in [204]th open_state
The analysis was completed successfully. No issues were detected.

print report in [205]th open_state
The analysis was completed successfully. No issues were detected.

print report in [206]th open_state
The analysis was completed successfully. No issues were detected.

print report in [207]th open_state
The analysis was completed successfully. No issues were detected.

print report in [208]th open_state
The analysis was completed successfully. No issues were detected.

print report in [209]th open_state
The analysis was completed successfully. No issues were detected.

print report in [210]th open_state
The analysis was completed successfully. No issues were detected.

print report in [211]th open_state
The analysis was completed successfully. No issues were detected.

print report in [212]th open_state
The analysis was completed successfully. No issues were detected.

print report in [213]th open_state
The analysis was completed successfully. No issues were detected.

print report in [214]th open_state
The analysis was completed successfully. No issues were detected.

print report in [215]th open_state
The analysis was completed successfully. No issues were detected.

print report in [216]th open_state
The analysis was completed successfully. No issues were detected.

print report in [217]th open_state
The analysis was completed successfully. No issues were detected.

print report in [218]th open_state
The analysis was completed successfully. No issues were detected.

print report in [219]th open_state
The analysis was completed successfully. No issues were detected.

print report in [220]th open_state
The analysis was completed successfully. No issues were detected.

print report in [221]th open_state
The analysis was completed successfully. No issues were detected.

print report in [222]th open_state
The analysis was completed successfully. No issues were detected.

print report in [223]th open_state
The analysis was completed successfully. No issues were detected.

print report in [224]th open_state
The analysis was completed successfully. No issues were detected.

print report in [225]th open_state
The analysis was completed successfully. No issues were detected.

print report in [226]th open_state
The analysis was completed successfully. No issues were detected.

print report in [227]th open_state
The analysis was completed successfully. No issues were detected.

print report in [228]th open_state
The analysis was completed successfully. No issues were detected.

print report in [229]th open_state
The analysis was completed successfully. No issues were detected.

print report in [230]th open_state
The analysis was completed successfully. No issues were detected.

print report in [231]th open_state
The analysis was completed successfully. No issues were detected.

print report in [232]th open_state
The analysis was completed successfully. No issues were detected.

print report in [233]th open_state
The analysis was completed successfully. No issues were detected.

print report in [234]th open_state
The analysis was completed successfully. No issues were detected.

print report in [235]th open_state
The analysis was completed successfully. No issues were detected.

print report in [236]th open_state
The analysis was completed successfully. No issues were detected.

print report in [237]th open_state
The analysis was completed successfully. No issues were detected.

print report in [238]th open_state
The analysis was completed successfully. No issues were detected.

print report in [239]th open_state
The analysis was completed successfully. No issues were detected.

print report in [240]th open_state
The analysis was completed successfully. No issues were detected.

print report in [241]th open_state
The analysis was completed successfully. No issues were detected.

time cost [1911s]
