Function : attacked(uint256,address) with hash 0xd1d52ab1 , address 101 found
Function : attack0(uint256,bytes4) with hash 0x4ee77ec4 , address 714 found
Function : attack1(uint256,bytes4,bytes32) with hash 0xef9e8267 , address 747 found
Single analyze mode
Function : attacked(uint256,address) with hash 0xd1d52ab1 , address 101 found
now in creation end, the activate_function is: constructor
Function : attacked(uint256,address) with hash 0xd1d52ab1 , address 101 found
END with EOA TX CASE: ContractCreationTransaction 1 from 1004753105490295263244812946565948198177742958590 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
setup AttackBridge
Function : attack0(uint256,bytes4) with hash 0x4ee77ec4 , address 714 found
Function : attack1(uint256,bytes4,bytes32) with hash 0xef9e8267 , address 747 found
now in creation end, the activate_function is: constructor
Function : attack0(uint256,bytes4) with hash 0x4ee77ec4 , address 714 found
Function : attack1(uint256,bytes4,bytes32) with hash 0xef9e8267 , address 747 found
END with EOA TX CASE: ContractCreationTransaction 2 from 1271270613000041655817448348132275889066893754095 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
main:  (96, 96, 96, 64, 82, 54, 21, 97, 0, 61, 87, 96, 0, 53, 124, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 144, 4, 128, 99, 209, 213, 42, 177, 20, 97, 0, 101, 87, 97, 0, 61, 86, 91, 97, 0, 79, 91, 96, 0, 96, 1, 144, 80, 97, 0, 76, 86, 91, 144, 86, 91, 96, 64, 81, 128, 130, 129, 82, 96, 32, 1, 145, 80, 80, 96, 64, 81, 128, 145, 3, 144, 243, 91, 97, 0, 132, 96, 4, 128, 128, 53, 144, 96, 32, 1, 144, 145, 144, 128, 53, 144, 96, 32, 1, 144, 145, 144, 80, 80, 97, 0, 154, 86, 91, 96, 64, 81, 128, 130, 129, 82, 96, 32, 1, 145, 80, 80, 96, 64, 81, 128, 145, 3, 144, 243, 91, 96, 0, 130, 48, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 49, 16, 21, 97, 0, 192, 87, 97, 0, 2, 86, 91, 51, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 131, 96, 64, 81, 128, 144, 80, 96, 0, 96, 64, 81, 128, 131, 3, 129, 133, 135, 97, 133, 2, 90, 3, 241, 146, 80, 80, 80, 21, 21, 97, 0, 254, 87, 97, 0, 2, 86, 91, 96, 1, 144, 80, 97, 1, 7, 86, 91, 146, 145, 80, 80, 86)

=========== Excute 0 TX Loop!!!==========

Now we have 1 open states!!!
Starting message call transaction, iteration: 0, 1 initial states
Starting message call transaction to: 1271270613000041655817448348132275889066893754095
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 2
now we have 2 global state (path)!
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 3
now we have 3 global state (path)!
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 4
now we have 4 global state (path)!
now in msTX end, the activate_function is: fallback
END with EOA TX CASE: MessageCallTransaction 3 from sender_3 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
now we have 3 global state (path)!
now in msTX end, the activate_function is: fallback
END with EOA TX CASE: MessageCallTransaction 3 from sender_3 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
now we have 2 global state (path)!
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 4 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 3
now we have 3 global state (path)!
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 5 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
get the account from address
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 4 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 4 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 4
now we have 4 global state (path)!
unreached path
Now in function: attacked(uint256,address) in contract: MAIN
unreached path
Now in function: attack0(uint256,bytes4) in contract: AttackBridge
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 6 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
now in msTX end, the activate_function is: attack0(uint256,bytes4)
END with EOA TX CASE: MessageCallTransaction 3 from sender_3 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
now we have 3 global state (path)!
unreached path
Now in function: fallback in contract: AttackBridge
get the account from address
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 5 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 5 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
Now in function: attacked(uint256,address) in contract: MAIN
2 worklist added! now the worklist num is 4
now we have 4 global state (path)!
Invalid jump argument (symbolic address)
 In handle_vm_exception in svm.py
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
2 worklist added! now the worklist num is 5
now we have 5 global state (path)!
Invalid jump argument (symbolic address)
 In handle_vm_exception in svm.py
now we have 4 global state (path)!
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 7 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 3 from sender_3 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
now we have 3 global state (path)!
unreached path
Now in function: fallback in contract: AttackBridge
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 3 from sender_3 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
now we have 2 global state (path)!
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 3
now we have 3 global state (path)!
unreached path
Now in function: fallback in contract: AttackBridge
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 4
now we have 4 global state (path)!
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 8 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 5
now we have 5 global state (path)!
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 6
now we have 6 global state (path)!
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 7
now we have 7 global state (path)!
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 9 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 10 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 11 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 8
now we have 8 global state (path)!
get the account from address
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 8 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 8 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 9
now we have 9 global state (path)!
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 10
now we have 10 global state (path)!
unreached path
Now in function: attacked(uint256,address) in contract: MAIN
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 12 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 13 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
get the account from address
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 9 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 9 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 11
now we have 11 global state (path)!
Now in function: attacked(uint256,address) in contract: MAIN
2 worklist added! now the worklist num is 12
now we have 12 global state (path)!
now we have 11 global state (path)!
Invalid jump argument (symbolic address)
 In handle_vm_exception in svm.py
get the account from address
get the account from address
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 10 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 10 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 6 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 6 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 11 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 11 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 12
now we have 12 global state (path)!
Now in function: attacked(uint256,address) in contract: MAIN
2 worklist added! now the worklist num is 13
now we have 13 global state (path)!
unreached path
Now in function: attacked(uint256,address) in contract: MAIN
Invalid jump argument (symbolic address)
 In handle_vm_exception in svm.py
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
now we have 12 global state (path)!
get the account from address
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 6 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 6 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 12 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 12 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now we have 11 global state (path)!
Now in function: attacked(uint256,address) in contract: MAIN
2 worklist added! now the worklist num is 12
now we have 12 global state (path)!
now we have 11 global state (path)!
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 6 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 6 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
Invalid jump argument (symbolic address)
 In handle_vm_exception in svm.py
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
get the account from address
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 6 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 6 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 13 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 13 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 7 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 7 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
Now in function: attacked(uint256,address) in contract: MAIN
2 worklist added! now the worklist num is 12
now we have 12 global state (path)!
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 6 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 6 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
Invalid jump argument (symbolic address)
 In handle_vm_exception in svm.py
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 4 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 4 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
now we have 11 global state (path)!
unreached path
Now in function: attack0(uint256,bytes4) in contract: AttackBridge
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 7 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 7 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now we have 10 global state (path)!
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 7 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 7 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 4 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 4 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 4 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 4 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 7 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 7 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
now in msTX end, the activate_function is: attack0(uint256,bytes4)
END with EOA TX CASE: MessageCallTransaction 3 from sender_3 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
now we have 9 global state (path)!
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 7 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 7 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 4 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 4 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 5 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 5 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
unreached path
Now in function: attack0(uint256,bytes4) in contract: AttackBridge
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 4 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 4 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
unreached path
Now in function: attack0(uint256,bytes4) in contract: AttackBridge
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
unreached path
Now in function: attack0(uint256,bytes4) in contract: AttackBridge
unreached path
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
unreached path
Now in function: attack0(uint256,bytes4) in contract: AttackBridge
now in msTX end, the activate_function is: attack0(uint256,bytes4)
END with EOA TX CASE: MessageCallTransaction 3 from sender_3 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
now we have 8 global state (path)!
now in msTX end, the activate_function is: attack0(uint256,bytes4)
END with EOA TX CASE: MessageCallTransaction 3 from sender_3 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
now we have 7 global state (path)!
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 5 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 5 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 5 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 5 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: attack0(uint256,bytes4)
END with EOA TX CASE: MessageCallTransaction 3 from sender_3 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
now we have 6 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 3 from sender_3 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
now we have 5 global state (path)!
now in msTX end, the activate_function is: attack0(uint256,bytes4)
END with EOA TX CASE: MessageCallTransaction 3 from sender_3 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
now we have 4 global state (path)!
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 5 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 5 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
unreached path
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 5 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 5 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
unreached path
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
unreached path
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
unreached path
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 3 from sender_3 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
now we have 3 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 3 from sender_3 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
now we have 2 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 3 from sender_3 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
now we have 1 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 3 from sender_3 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
Excute 0 TX Loop finish!!!
output the call_chain
++++++++++++++++++++ In 0th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
++++++++++++++++++++ In 1th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
++++++++++++++++++++ In 2th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 3th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 4th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
++++++++++++++++++++ In 5th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 6th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 7th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
++++++++++++++++++++ In 8th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 9th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 10th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
++++++++++++++++++++ In 11th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 12th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
++++++++++++++++++++ In 13th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 14th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]

=========== Excute 1 TX Loop!!!==========

Now we have 15 open states!!!
Starting message call transaction, iteration: 1, 15 initial states
Starting message call transaction to: 1271270613000041655817448348132275889066893754095
now we have 15 global state (path)!
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 16
now we have 16 global state (path)!
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 17
now we have 17 global state (path)!
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 18
now we have 18 global state (path)!
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 19
now we have 19 global state (path)!
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 20
now we have 20 global state (path)!
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 21
now we have 21 global state (path)!
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 22
now we have 22 global state (path)!
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 23
now we have 23 global state (path)!
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 24
now we have 24 global state (path)!
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 25
now we have 25 global state (path)!
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 26
now we have 26 global state (path)!
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 27
now we have 27 global state (path)!
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 28
now we have 28 global state (path)!
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 29
now we have 29 global state (path)!
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 30
now we have 30 global state (path)!
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 31
now we have 31 global state (path)!
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 32
now we have 32 global state (path)!
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 33
now we have 33 global state (path)!
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 34
now we have 34 global state (path)!
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 35
now we have 35 global state (path)!
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 36
now we have 36 global state (path)!
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 37
now we have 37 global state (path)!
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 38
now we have 38 global state (path)!
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 39
now we have 39 global state (path)!
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 40
now we have 40 global state (path)!
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 41
now we have 41 global state (path)!
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 42
now we have 42 global state (path)!
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 43
now we have 43 global state (path)!
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 44
now we have 44 global state (path)!
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 45
now we have 45 global state (path)!
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 46
now we have 46 global state (path)!
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 47
now we have 47 global state (path)!
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 48
now we have 48 global state (path)!
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 49
now we have 49 global state (path)!
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 50
now we have 50 global state (path)!
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 51
now we have 51 global state (path)!
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 52
now we have 52 global state (path)!
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 53
now we have 53 global state (path)!
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 54
now we have 54 global state (path)!
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 55
now we have 55 global state (path)!
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 56
now we have 56 global state (path)!
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 57
now we have 57 global state (path)!
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 58
now we have 58 global state (path)!
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 59
now we have 59 global state (path)!
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 60
now we have 60 global state (path)!
now in msTX end, the activate_function is: fallback
END with EOA TX CASE: MessageCallTransaction 14 from sender_14 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
now we have 59 global state (path)!
now in msTX end, the activate_function is: fallback
END with EOA TX CASE: MessageCallTransaction 15 from sender_15 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
now we have 58 global state (path)!
now in msTX end, the activate_function is: fallback
END with EOA TX CASE: MessageCallTransaction 16 from sender_16 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
now we have 57 global state (path)!
now in msTX end, the activate_function is: fallback
END with EOA TX CASE: MessageCallTransaction 17 from sender_17 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
now we have 56 global state (path)!
now in msTX end, the activate_function is: fallback
END with EOA TX CASE: MessageCallTransaction 18 from sender_18 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
now we have 55 global state (path)!
now in msTX end, the activate_function is: fallback
END with EOA TX CASE: MessageCallTransaction 19 from sender_19 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
now we have 54 global state (path)!
now in msTX end, the activate_function is: fallback
END with EOA TX CASE: MessageCallTransaction 20 from sender_20 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
now we have 53 global state (path)!
now in msTX end, the activate_function is: fallback
END with EOA TX CASE: MessageCallTransaction 21 from sender_21 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
now we have 52 global state (path)!
now in msTX end, the activate_function is: fallback
END with EOA TX CASE: MessageCallTransaction 22 from sender_22 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
now we have 51 global state (path)!
now in msTX end, the activate_function is: fallback
END with EOA TX CASE: MessageCallTransaction 23 from sender_23 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
now we have 50 global state (path)!
now in msTX end, the activate_function is: fallback
END with EOA TX CASE: MessageCallTransaction 24 from sender_24 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
now we have 49 global state (path)!
now in msTX end, the activate_function is: fallback
END with EOA TX CASE: MessageCallTransaction 25 from sender_25 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
now we have 48 global state (path)!
now in msTX end, the activate_function is: fallback
END with EOA TX CASE: MessageCallTransaction 26 from sender_26 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
now we have 47 global state (path)!
now in msTX end, the activate_function is: fallback
END with EOA TX CASE: MessageCallTransaction 27 from sender_27 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
now we have 46 global state (path)!
now in msTX end, the activate_function is: fallback
END with EOA TX CASE: MessageCallTransaction 28 from sender_28 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
now we have 45 global state (path)!
now in msTX end, the activate_function is: fallback
END with EOA TX CASE: MessageCallTransaction 14 from sender_14 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
now we have 44 global state (path)!
now in msTX end, the activate_function is: fallback
END with EOA TX CASE: MessageCallTransaction 15 from sender_15 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
now we have 43 global state (path)!
now in msTX end, the activate_function is: fallback
END with EOA TX CASE: MessageCallTransaction 16 from sender_16 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
now we have 42 global state (path)!
now in msTX end, the activate_function is: fallback
END with EOA TX CASE: MessageCallTransaction 17 from sender_17 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
now we have 41 global state (path)!
now in msTX end, the activate_function is: fallback
END with EOA TX CASE: MessageCallTransaction 18 from sender_18 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
now we have 40 global state (path)!
now in msTX end, the activate_function is: fallback
END with EOA TX CASE: MessageCallTransaction 19 from sender_19 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
now we have 39 global state (path)!
now in msTX end, the activate_function is: fallback
END with EOA TX CASE: MessageCallTransaction 20 from sender_20 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
now we have 38 global state (path)!
now in msTX end, the activate_function is: fallback
END with EOA TX CASE: MessageCallTransaction 21 from sender_21 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
now we have 37 global state (path)!
now in msTX end, the activate_function is: fallback
END with EOA TX CASE: MessageCallTransaction 22 from sender_22 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
now we have 36 global state (path)!
now in msTX end, the activate_function is: fallback
END with EOA TX CASE: MessageCallTransaction 23 from sender_23 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
now we have 35 global state (path)!
now in msTX end, the activate_function is: fallback
END with EOA TX CASE: MessageCallTransaction 24 from sender_24 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
now we have 34 global state (path)!
now in msTX end, the activate_function is: fallback
END with EOA TX CASE: MessageCallTransaction 25 from sender_25 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
now we have 33 global state (path)!
now in msTX end, the activate_function is: fallback
END with EOA TX CASE: MessageCallTransaction 26 from sender_26 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
now we have 32 global state (path)!
now in msTX end, the activate_function is: fallback
END with EOA TX CASE: MessageCallTransaction 27 from sender_27 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
now we have 31 global state (path)!
now in msTX end, the activate_function is: fallback
END with EOA TX CASE: MessageCallTransaction 28 from sender_28 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
now we have 30 global state (path)!
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 29 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 30 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 31 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 32 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 33 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 34 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 35 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 36 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 37 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 38 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 39 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 40 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 41 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 42 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 43 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 31
now we have 31 global state (path)!
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 32
now we have 32 global state (path)!
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 33
now we have 33 global state (path)!
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 34
now we have 34 global state (path)!
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 35
now we have 35 global state (path)!
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 36
now we have 36 global state (path)!
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 37
now we have 37 global state (path)!
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 38
now we have 38 global state (path)!
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 39
now we have 39 global state (path)!
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 40
now we have 40 global state (path)!
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 41
now we have 41 global state (path)!
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 42
now we have 42 global state (path)!
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 43
now we have 43 global state (path)!
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 44
now we have 44 global state (path)!
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 45
now we have 45 global state (path)!
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 44 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 45 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 46 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 47 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 48 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 49 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 50 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 51 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 52 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 53 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 54 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 55 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 56 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 57 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 58 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
get the account from address
get the account from address
get the account from address
get the account from address
get the account from address
get the account from address
get the account from address
get the account from address
get the account from address
get the account from address
get the account from address
get the account from address
get the account from address
get the account from address
get the account from address
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 29 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 29 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 30 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 30 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 31 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 31 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 32 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 32 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 33 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 33 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 34 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 34 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 35 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 35 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 36 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 36 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 37 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 37 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 38 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 38 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 39 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 39 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 40 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 40 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 41 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 41 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 42 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 42 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 43 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 43 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 46
now we have 46 global state (path)!
unreached path
Now in function: attacked(uint256,address) in contract: MAIN
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 47
now we have 47 global state (path)!
unreached path
Now in function: attacked(uint256,address) in contract: MAIN
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 48
now we have 48 global state (path)!
unreached path
Now in function: attacked(uint256,address) in contract: MAIN
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 49
now we have 49 global state (path)!
unreached path
Now in function: attacked(uint256,address) in contract: MAIN
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 50
now we have 50 global state (path)!
unreached path
Now in function: attacked(uint256,address) in contract: MAIN
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 51
now we have 51 global state (path)!
unreached path
Now in function: attacked(uint256,address) in contract: MAIN
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 52
now we have 52 global state (path)!
unreached path
Now in function: attacked(uint256,address) in contract: MAIN
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 53
now we have 53 global state (path)!
unreached path
Now in function: attacked(uint256,address) in contract: MAIN
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 54
now we have 54 global state (path)!
unreached path
Now in function: attacked(uint256,address) in contract: MAIN
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 55
now we have 55 global state (path)!
unreached path
Now in function: attacked(uint256,address) in contract: MAIN
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 56
now we have 56 global state (path)!
unreached path
Now in function: attacked(uint256,address) in contract: MAIN
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 57
now we have 57 global state (path)!
unreached path
Now in function: attacked(uint256,address) in contract: MAIN
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 58
now we have 58 global state (path)!
unreached path
Now in function: attacked(uint256,address) in contract: MAIN
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 59
now we have 59 global state (path)!
unreached path
Now in function: attacked(uint256,address) in contract: MAIN
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 60
now we have 60 global state (path)!
unreached path
Now in function: attacked(uint256,address) in contract: MAIN
unreached path
Now in function: attack0(uint256,bytes4) in contract: AttackBridge
unreached path
Now in function: attack0(uint256,bytes4) in contract: AttackBridge
unreached path
Now in function: attack0(uint256,bytes4) in contract: AttackBridge
unreached path
Now in function: attack0(uint256,bytes4) in contract: AttackBridge
unreached path
Now in function: attack0(uint256,bytes4) in contract: AttackBridge
unreached path
Now in function: attack0(uint256,bytes4) in contract: AttackBridge
unreached path
Now in function: attack0(uint256,bytes4) in contract: AttackBridge
unreached path
Now in function: attack0(uint256,bytes4) in contract: AttackBridge
unreached path
Now in function: attack0(uint256,bytes4) in contract: AttackBridge
unreached path
Now in function: attack0(uint256,bytes4) in contract: AttackBridge
unreached path
Now in function: attack0(uint256,bytes4) in contract: AttackBridge
unreached path
Now in function: attack0(uint256,bytes4) in contract: AttackBridge
unreached path
Now in function: attack0(uint256,bytes4) in contract: AttackBridge
unreached path
Now in function: attack0(uint256,bytes4) in contract: AttackBridge
unreached path
Now in function: attack0(uint256,bytes4) in contract: AttackBridge
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 59 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 60 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 61 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 62 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 63 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 64 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 65 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 66 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 67 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 68 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 69 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 70 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 71 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 72 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 73 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
now in msTX end, the activate_function is: attack0(uint256,bytes4)
END with EOA TX CASE: MessageCallTransaction 14 from sender_14 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
now we have 59 global state (path)!
now in msTX end, the activate_function is: attack0(uint256,bytes4)
END with EOA TX CASE: MessageCallTransaction 15 from sender_15 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
now we have 58 global state (path)!
now in msTX end, the activate_function is: attack0(uint256,bytes4)
END with EOA TX CASE: MessageCallTransaction 16 from sender_16 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
now we have 57 global state (path)!
now in msTX end, the activate_function is: attack0(uint256,bytes4)
END with EOA TX CASE: MessageCallTransaction 17 from sender_17 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
now we have 56 global state (path)!
now in msTX end, the activate_function is: attack0(uint256,bytes4)
END with EOA TX CASE: MessageCallTransaction 18 from sender_18 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
now we have 55 global state (path)!
now in msTX end, the activate_function is: attack0(uint256,bytes4)
END with EOA TX CASE: MessageCallTransaction 19 from sender_19 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
now we have 54 global state (path)!
now in msTX end, the activate_function is: attack0(uint256,bytes4)
END with EOA TX CASE: MessageCallTransaction 20 from sender_20 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
now we have 53 global state (path)!
now in msTX end, the activate_function is: attack0(uint256,bytes4)
END with EOA TX CASE: MessageCallTransaction 21 from sender_21 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
now we have 52 global state (path)!
now in msTX end, the activate_function is: attack0(uint256,bytes4)
END with EOA TX CASE: MessageCallTransaction 22 from sender_22 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
now we have 51 global state (path)!
now in msTX end, the activate_function is: attack0(uint256,bytes4)
END with EOA TX CASE: MessageCallTransaction 23 from sender_23 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
now we have 50 global state (path)!
now in msTX end, the activate_function is: attack0(uint256,bytes4)
END with EOA TX CASE: MessageCallTransaction 24 from sender_24 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
now we have 49 global state (path)!
now in msTX end, the activate_function is: attack0(uint256,bytes4)
END with EOA TX CASE: MessageCallTransaction 25 from sender_25 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
now we have 48 global state (path)!
now in msTX end, the activate_function is: attack0(uint256,bytes4)
END with EOA TX CASE: MessageCallTransaction 26 from sender_26 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
now we have 47 global state (path)!
now in msTX end, the activate_function is: attack0(uint256,bytes4)
END with EOA TX CASE: MessageCallTransaction 27 from sender_27 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
now we have 46 global state (path)!
now in msTX end, the activate_function is: attack0(uint256,bytes4)
END with EOA TX CASE: MessageCallTransaction 28 from sender_28 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
now we have 45 global state (path)!
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
get the account from address
get the account from address
get the account from address
get the account from address
get the account from address
get the account from address
get the account from address
get the account from address
get the account from address
get the account from address
get the account from address
get the account from address
get the account from address
get the account from address
get the account from address
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 44 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 44 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 45 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 45 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 46 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 46 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 47 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 47 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 48 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 48 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 49 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 49 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 50 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 50 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 51 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 51 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 52 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 52 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 53 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 53 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 54 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 54 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 55 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 55 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 56 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 56 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 57 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 57 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 58 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 58 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
Now in function: attacked(uint256,address) in contract: MAIN
2 worklist added! now the worklist num is 46
now we have 46 global state (path)!
Now in function: attacked(uint256,address) in contract: MAIN
2 worklist added! now the worklist num is 47
now we have 47 global state (path)!
Now in function: attacked(uint256,address) in contract: MAIN
2 worklist added! now the worklist num is 48
now we have 48 global state (path)!
Now in function: attacked(uint256,address) in contract: MAIN
2 worklist added! now the worklist num is 49
now we have 49 global state (path)!
Now in function: attacked(uint256,address) in contract: MAIN
2 worklist added! now the worklist num is 50
now we have 50 global state (path)!
Now in function: attacked(uint256,address) in contract: MAIN
2 worklist added! now the worklist num is 51
now we have 51 global state (path)!
Now in function: attacked(uint256,address) in contract: MAIN
2 worklist added! now the worklist num is 52
now we have 52 global state (path)!
Now in function: attacked(uint256,address) in contract: MAIN
2 worklist added! now the worklist num is 53
now we have 53 global state (path)!
Now in function: attacked(uint256,address) in contract: MAIN
2 worklist added! now the worklist num is 54
now we have 54 global state (path)!
Now in function: attacked(uint256,address) in contract: MAIN
2 worklist added! now the worklist num is 55
now we have 55 global state (path)!
Now in function: attacked(uint256,address) in contract: MAIN
2 worklist added! now the worklist num is 56
now we have 56 global state (path)!
Now in function: attacked(uint256,address) in contract: MAIN
2 worklist added! now the worklist num is 57
now we have 57 global state (path)!
Now in function: attacked(uint256,address) in contract: MAIN
2 worklist added! now the worklist num is 58
now we have 58 global state (path)!
Now in function: attacked(uint256,address) in contract: MAIN
2 worklist added! now the worklist num is 59
now we have 59 global state (path)!
Now in function: attacked(uint256,address) in contract: MAIN
2 worklist added! now the worklist num is 60
now we have 60 global state (path)!
Invalid jump argument (symbolic address)
 In handle_vm_exception in svm.py
Invalid jump argument (symbolic address)
 In handle_vm_exception in svm.py
Invalid jump argument (symbolic address)
 In handle_vm_exception in svm.py
Invalid jump argument (symbolic address)
 In handle_vm_exception in svm.py
Invalid jump argument (symbolic address)
 In handle_vm_exception in svm.py
Invalid jump argument (symbolic address)
 In handle_vm_exception in svm.py
Invalid jump argument (symbolic address)
 In handle_vm_exception in svm.py
Invalid jump argument (symbolic address)
 In handle_vm_exception in svm.py
Invalid jump argument (symbolic address)
 In handle_vm_exception in svm.py
Invalid jump argument (symbolic address)
 In handle_vm_exception in svm.py
Invalid jump argument (symbolic address)
 In handle_vm_exception in svm.py
Invalid jump argument (symbolic address)
 In handle_vm_exception in svm.py
Invalid jump argument (symbolic address)
 In handle_vm_exception in svm.py
Invalid jump argument (symbolic address)
 In handle_vm_exception in svm.py
Invalid jump argument (symbolic address)
 In handle_vm_exception in svm.py
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
unreached path
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
unreached path
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
unreached path
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
unreached path
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
unreached path
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
unreached path
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
unreached path
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
unreached path
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
unreached path
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
unreached path
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
unreached path
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
unreached path
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
unreached path
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
unreached path
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
2 worklist added! now the worklist num is 61
now we have 61 global state (path)!
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
2 worklist added! now the worklist num is 62
now we have 62 global state (path)!
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
2 worklist added! now the worklist num is 63
now we have 63 global state (path)!
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
2 worklist added! now the worklist num is 64
now we have 64 global state (path)!
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
2 worklist added! now the worklist num is 65
now we have 65 global state (path)!
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
2 worklist added! now the worklist num is 66
now we have 66 global state (path)!
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
2 worklist added! now the worklist num is 67
now we have 67 global state (path)!
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
2 worklist added! now the worklist num is 68
now we have 68 global state (path)!
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
2 worklist added! now the worklist num is 69
now we have 69 global state (path)!
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
2 worklist added! now the worklist num is 70
now we have 70 global state (path)!
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
2 worklist added! now the worklist num is 71
now we have 71 global state (path)!
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
2 worklist added! now the worklist num is 72
now we have 72 global state (path)!
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
2 worklist added! now the worklist num is 73
now we have 73 global state (path)!
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
2 worklist added! now the worklist num is 74
now we have 74 global state (path)!
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
2 worklist added! now the worklist num is 75
now we have 75 global state (path)!
Invalid jump argument (symbolic address)
 In handle_vm_exception in svm.py
now we have 74 global state (path)!
Invalid jump argument (symbolic address)
 In handle_vm_exception in svm.py
now we have 73 global state (path)!
Invalid jump argument (symbolic address)
 In handle_vm_exception in svm.py
now we have 72 global state (path)!
Invalid jump argument (symbolic address)
 In handle_vm_exception in svm.py
now we have 71 global state (path)!
Invalid jump argument (symbolic address)
 In handle_vm_exception in svm.py
now we have 70 global state (path)!
Invalid jump argument (symbolic address)
 In handle_vm_exception in svm.py
now we have 69 global state (path)!
Invalid jump argument (symbolic address)
 In handle_vm_exception in svm.py
now we have 68 global state (path)!
Invalid jump argument (symbolic address)
 In handle_vm_exception in svm.py
now we have 67 global state (path)!
Invalid jump argument (symbolic address)
 In handle_vm_exception in svm.py
now we have 66 global state (path)!
Invalid jump argument (symbolic address)
 In handle_vm_exception in svm.py
now we have 65 global state (path)!
Invalid jump argument (symbolic address)
 In handle_vm_exception in svm.py
now we have 64 global state (path)!
Invalid jump argument (symbolic address)
 In handle_vm_exception in svm.py
now we have 63 global state (path)!
Invalid jump argument (symbolic address)
 In handle_vm_exception in svm.py
now we have 62 global state (path)!
Invalid jump argument (symbolic address)
 In handle_vm_exception in svm.py
now we have 61 global state (path)!
Invalid jump argument (symbolic address)
 In handle_vm_exception in svm.py
now we have 60 global state (path)!
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 74 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 75 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 76 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 77 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 78 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 79 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 80 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 81 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 82 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 83 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 84 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 85 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 86 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 87 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 88 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 14 from sender_14 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
now we have 59 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 15 from sender_15 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
now we have 58 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 16 from sender_16 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
now we have 57 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 17 from sender_17 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
now we have 56 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 18 from sender_18 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
now we have 55 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 19 from sender_19 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
now we have 54 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 20 from sender_20 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
now we have 53 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 21 from sender_21 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
now we have 52 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 22 from sender_22 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
now we have 51 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 23 from sender_23 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
now we have 50 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 24 from sender_24 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
now we have 49 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 25 from sender_25 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
now we have 48 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 26 from sender_26 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
now we have 47 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 27 from sender_27 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
now we have 46 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 28 from sender_28 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
now we have 45 global state (path)!
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 14 from sender_14 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
now we have 44 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 15 from sender_15 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
now we have 43 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 16 from sender_16 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
now we have 42 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 17 from sender_17 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
now we have 41 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 18 from sender_18 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
now we have 40 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 19 from sender_19 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
now we have 39 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 20 from sender_20 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
now we have 38 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 21 from sender_21 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
now we have 37 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 22 from sender_22 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
now we have 36 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 23 from sender_23 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
now we have 35 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 24 from sender_24 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
now we have 34 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 25 from sender_25 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
now we have 33 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 26 from sender_26 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
now we have 32 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 27 from sender_27 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
now we have 31 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 28 from sender_28 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
now we have 30 global state (path)!
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 31
now we have 31 global state (path)!
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 32
now we have 32 global state (path)!
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 33
now we have 33 global state (path)!
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 34
now we have 34 global state (path)!
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 35
now we have 35 global state (path)!
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 36
now we have 36 global state (path)!
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 37
now we have 37 global state (path)!
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 38
now we have 38 global state (path)!
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 39
now we have 39 global state (path)!
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 40
now we have 40 global state (path)!
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 89 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 90 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 91 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 92 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 93 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 94 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 95 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 41
now we have 41 global state (path)!
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 42
now we have 42 global state (path)!
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 43
now we have 43 global state (path)!
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 44
now we have 44 global state (path)!
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 45
now we have 45 global state (path)!
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 46
now we have 46 global state (path)!
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 47
now we have 47 global state (path)!
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 48
now we have 48 global state (path)!
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 49
now we have 49 global state (path)!
Now in function: fallback in contract: AttackBridge
2 worklist added! now the worklist num is 50
now we have 50 global state (path)!
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
unreached path
Now in function: fallback in contract: AttackBridge
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 51
now we have 51 global state (path)!
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 52
now we have 52 global state (path)!
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 53
now we have 53 global state (path)!
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 54
now we have 54 global state (path)!
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 55
now we have 55 global state (path)!
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 96 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 97 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 98 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 99 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 100 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 101 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 102 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 103 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 104 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 105 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 106 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 107 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 108 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 109 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 110 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 111 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 112 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 113 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 114 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 115 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 116 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 117 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 118 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 119 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 120 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 56
now we have 56 global state (path)!
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 57
now we have 57 global state (path)!
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 58
now we have 58 global state (path)!
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 59
now we have 59 global state (path)!
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 60
now we have 60 global state (path)!
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 61
now we have 61 global state (path)!
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 62
now we have 62 global state (path)!
get the account from address
get the account from address
get the account from address
get the account from address
get the account from address
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 89 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 89 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 63
now we have 63 global state (path)!
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 90 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 90 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 64
now we have 64 global state (path)!
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 91 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 91 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 65
now we have 65 global state (path)!
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 92 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 92 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 66
now we have 66 global state (path)!
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 93 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 93 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 67
now we have 67 global state (path)!
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 94 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 94 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 95 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 95 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 68
now we have 68 global state (path)!
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 69
now we have 69 global state (path)!
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 70
now we have 70 global state (path)!
unreached path
Now in function: attacked(uint256,address) in contract: MAIN
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 71
now we have 71 global state (path)!
unreached path
Now in function: attacked(uint256,address) in contract: MAIN
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 72
now we have 72 global state (path)!
unreached path
Now in function: attacked(uint256,address) in contract: MAIN
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 73
now we have 73 global state (path)!
unreached path
Now in function: attacked(uint256,address) in contract: MAIN
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 74
now we have 74 global state (path)!
unreached path
Now in function: attacked(uint256,address) in contract: MAIN
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 121 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 122 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 123 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 124 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 125 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 126 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 127 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 128 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 129 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 130 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 131 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 132 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 133 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 134 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 135 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 136 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 137 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
=============Call Instruction!! print stack states=============
get the account from address
------------------ call to a fixed or created target  -------------------------------
Setup new transaction %s MessageCallTransaction 138 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
get the account from address
get the account from address
get the account from address
get the account from address
get the account from address
get the account from address
get the account from address
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 96 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 96 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 97 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 97 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 98 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 98 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 99 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 99 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 100 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 100 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 101 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 101 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 102 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 102 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 103 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 103 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 104 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 104 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 75
now we have 75 global state (path)!
Now in function: attacked(uint256,address) in contract: MAIN
2 worklist added! now the worklist num is 76
now we have 76 global state (path)!
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 77
now we have 77 global state (path)!
Now in function: attacked(uint256,address) in contract: MAIN
2 worklist added! now the worklist num is 78
now we have 78 global state (path)!
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 79
now we have 79 global state (path)!
Now in function: attacked(uint256,address) in contract: MAIN
2 worklist added! now the worklist num is 80
now we have 80 global state (path)!
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 81
now we have 81 global state (path)!
Now in function: attacked(uint256,address) in contract: MAIN
2 worklist added! now the worklist num is 82
now we have 82 global state (path)!
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 83
now we have 83 global state (path)!
Now in function: attacked(uint256,address) in contract: MAIN
2 worklist added! now the worklist num is 84
now we have 84 global state (path)!
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 85
now we have 85 global state (path)!
Now in function: attacked(uint256,address) in contract: MAIN
2 worklist added! now the worklist num is 86
now we have 86 global state (path)!
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 87
now we have 87 global state (path)!
Now in function: attacked(uint256,address) in contract: MAIN
2 worklist added! now the worklist num is 88
now we have 88 global state (path)!
now we have 87 global state (path)!
now we have 86 global state (path)!
now we have 85 global state (path)!
now we have 84 global state (path)!
now we have 83 global state (path)!
Invalid jump argument (symbolic address)
 In handle_vm_exception in svm.py
Invalid jump argument (symbolic address)
 In handle_vm_exception in svm.py
Invalid jump argument (symbolic address)
 In handle_vm_exception in svm.py
Invalid jump argument (symbolic address)
 In handle_vm_exception in svm.py
Invalid jump argument (symbolic address)
 In handle_vm_exception in svm.py
Invalid jump argument (symbolic address)
 In handle_vm_exception in svm.py
Invalid jump argument (symbolic address)
 In handle_vm_exception in svm.py
get the account from address
get the account from address
get the account from address
get the account from address
get the account from address
get the account from address
get the account from address
get the account from address
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 105 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 105 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
get the account from address
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 106 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 106 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
get the account from address
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 107 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 107 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
get the account from address
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 108 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 108 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
get the account from address
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 109 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 109 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 110 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 110 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 111 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 111 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 112 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 112 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 113 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 113 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 59 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 59 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 60 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 60 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 61 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 61 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 62 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 62 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 63 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 63 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 64 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 64 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 68 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 68 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 114 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 114 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 84
now we have 84 global state (path)!
Now in function: attacked(uint256,address) in contract: MAIN
2 worklist added! now the worklist num is 85
now we have 85 global state (path)!
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 115 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 115 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 86
now we have 86 global state (path)!
Now in function: attacked(uint256,address) in contract: MAIN
2 worklist added! now the worklist num is 87
now we have 87 global state (path)!
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 116 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 116 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 88
now we have 88 global state (path)!
Now in function: attacked(uint256,address) in contract: MAIN
2 worklist added! now the worklist num is 89
now we have 89 global state (path)!
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 117 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 117 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 90
now we have 90 global state (path)!
Now in function: attacked(uint256,address) in contract: MAIN
2 worklist added! now the worklist num is 91
now we have 91 global state (path)!
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 118 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 118 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 92
now we have 92 global state (path)!
Now in function: attacked(uint256,address) in contract: MAIN
2 worklist added! now the worklist num is 93
now we have 93 global state (path)!
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 119 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 119 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 120 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 120 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 94
now we have 94 global state (path)!
Now in function: attacked(uint256,address) in contract: MAIN
2 worklist added! now the worklist num is 95
now we have 95 global state (path)!
Now in function: fallback in contract: MAIN
2 worklist added! now the worklist num is 96
now we have 96 global state (path)!
Now in function: attacked(uint256,address) in contract: MAIN
2 worklist added! now the worklist num is 97
now we have 97 global state (path)!
unreached path
Now in function: attacked(uint256,address) in contract: MAIN
Invalid jump argument (symbolic address)
 In handle_vm_exception in svm.py
unreached path
Now in function: attacked(uint256,address) in contract: MAIN
Invalid jump argument (symbolic address)
 In handle_vm_exception in svm.py
unreached path
Now in function: attacked(uint256,address) in contract: MAIN
Invalid jump argument (symbolic address)
 In handle_vm_exception in svm.py
unreached path
Now in function: attacked(uint256,address) in contract: MAIN
Invalid jump argument (symbolic address)
 In handle_vm_exception in svm.py
unreached path
Now in function: attacked(uint256,address) in contract: MAIN
Invalid jump argument (symbolic address)
 In handle_vm_exception in svm.py
Invalid jump argument (symbolic address)
 In handle_vm_exception in svm.py
Invalid jump argument (symbolic address)
 In handle_vm_exception in svm.py
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
now we have 96 global state (path)!
now we have 95 global state (path)!
now we have 94 global state (path)!
now we have 93 global state (path)!
now we have 92 global state (path)!
now we have 91 global state (path)!
now we have 90 global state (path)!
get the account from address
get the account from address
get the account from address
get the account from address
get the account from address
get the account from address
get the account from address
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 59 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 59 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 60 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 60 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 61 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 61 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 62 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 62 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 63 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 63 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 65 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 65 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 66 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 66 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 70 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 70 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 71 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 71 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 121 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 121 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 122 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 122 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 123 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 123 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 124 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 124 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 125 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 125 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 126 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 126 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 127 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 127 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 128 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 128 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 129 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 129 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now we have 89 global state (path)!
now we have 88 global state (path)!
now we have 87 global state (path)!
now we have 86 global state (path)!
now we have 85 global state (path)!
now we have 84 global state (path)!
now we have 83 global state (path)!
Now in function: attacked(uint256,address) in contract: MAIN
2 worklist added! now the worklist num is 84
now we have 84 global state (path)!
Now in function: attacked(uint256,address) in contract: MAIN
2 worklist added! now the worklist num is 85
now we have 85 global state (path)!
Now in function: attacked(uint256,address) in contract: MAIN
2 worklist added! now the worklist num is 86
now we have 86 global state (path)!
Now in function: attacked(uint256,address) in contract: MAIN
2 worklist added! now the worklist num is 87
now we have 87 global state (path)!
Now in function: attacked(uint256,address) in contract: MAIN
2 worklist added! now the worklist num is 88
now we have 88 global state (path)!
Now in function: attacked(uint256,address) in contract: MAIN
2 worklist added! now the worklist num is 89
now we have 89 global state (path)!
Now in function: attacked(uint256,address) in contract: MAIN
2 worklist added! now the worklist num is 90
now we have 90 global state (path)!
now we have 89 global state (path)!
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 59 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 59 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now we have 88 global state (path)!
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 60 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 60 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now we have 87 global state (path)!
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 61 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 61 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now we have 86 global state (path)!
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 62 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 62 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now we have 85 global state (path)!
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 63 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 63 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 66 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 66 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 71 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 71 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
Invalid jump argument (symbolic address)
 In handle_vm_exception in svm.py
Invalid jump argument (symbolic address)
 In handle_vm_exception in svm.py
Invalid jump argument (symbolic address)
 In handle_vm_exception in svm.py
Invalid jump argument (symbolic address)
 In handle_vm_exception in svm.py
Invalid jump argument (symbolic address)
 In handle_vm_exception in svm.py
Invalid jump argument (symbolic address)
 In handle_vm_exception in svm.py
Invalid jump argument (symbolic address)
 In handle_vm_exception in svm.py
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
get the account from address
get the account from address
get the account from address
get the account from address
get the account from address
get the account from address
get the account from address
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 59 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 59 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 60 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 60 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 61 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 61 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 62 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 62 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 63 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 63 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 67 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 67 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 69 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 69 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 72 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 72 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 73 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 73 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 130 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 130 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 131 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 131 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 132 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 132 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 133 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 133 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 134 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 134 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 135 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 135 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 136 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 136 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 137 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 137 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 138 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 138 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 74 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 74 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 75 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 75 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 76 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 76 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 77 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 77 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 78 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 78 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 79 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 79 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 83 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 83 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
Now in function: attacked(uint256,address) in contract: MAIN
2 worklist added! now the worklist num is 86
now we have 86 global state (path)!
Now in function: attacked(uint256,address) in contract: MAIN
2 worklist added! now the worklist num is 87
now we have 87 global state (path)!
Now in function: attacked(uint256,address) in contract: MAIN
2 worklist added! now the worklist num is 88
now we have 88 global state (path)!
Now in function: attacked(uint256,address) in contract: MAIN
2 worklist added! now the worklist num is 89
now we have 89 global state (path)!
Now in function: attacked(uint256,address) in contract: MAIN
2 worklist added! now the worklist num is 90
now we have 90 global state (path)!
Now in function: attacked(uint256,address) in contract: MAIN
2 worklist added! now the worklist num is 91
now we have 91 global state (path)!
Now in function: attacked(uint256,address) in contract: MAIN
2 worklist added! now the worklist num is 92
now we have 92 global state (path)!
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 59 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 59 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 60 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 60 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 61 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 61 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 62 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 62 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 63 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 63 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 69 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 69 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 73 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 73 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
Invalid jump argument (symbolic address)
 In handle_vm_exception in svm.py
Invalid jump argument (symbolic address)
 In handle_vm_exception in svm.py
Invalid jump argument (symbolic address)
 In handle_vm_exception in svm.py
Invalid jump argument (symbolic address)
 In handle_vm_exception in svm.py
Invalid jump argument (symbolic address)
 In handle_vm_exception in svm.py
Invalid jump argument (symbolic address)
 In handle_vm_exception in svm.py
Invalid jump argument (symbolic address)
 In handle_vm_exception in svm.py
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 29 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 29 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 30 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 30 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 31 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 31 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 32 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 32 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 33 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 33 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 34 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 34 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 38 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 38 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
now we have 91 global state (path)!
now we have 90 global state (path)!
now we have 89 global state (path)!
now we have 88 global state (path)!
now we have 87 global state (path)!
now we have 86 global state (path)!
now we have 85 global state (path)!
unreached path
Now in function: attack0(uint256,bytes4) in contract: AttackBridge
unreached path
Now in function: attack0(uint256,bytes4) in contract: AttackBridge
unreached path
Now in function: attack0(uint256,bytes4) in contract: AttackBridge
unreached path
Now in function: attack0(uint256,bytes4) in contract: AttackBridge
unreached path
Now in function: attack0(uint256,bytes4) in contract: AttackBridge
unreached path
Now in function: attack0(uint256,bytes4) in contract: AttackBridge
unreached path
Now in function: attack0(uint256,bytes4) in contract: AttackBridge
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 74 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 74 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 75 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 75 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 76 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 76 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 77 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 77 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 78 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 78 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 80 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 80 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 81 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 81 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 85 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 85 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 86 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 86 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now we have 84 global state (path)!
now we have 83 global state (path)!
now we have 82 global state (path)!
now we have 81 global state (path)!
now we have 80 global state (path)!
now we have 79 global state (path)!
now we have 78 global state (path)!
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 74 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 74 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 29 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 29 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 75 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 75 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 30 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 30 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 76 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 76 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 31 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 31 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 77 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 77 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 32 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 32 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 78 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 78 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 33 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 33 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 35 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 35 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 81 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 81 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 36 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 36 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 40 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 40 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 86 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 86 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 41 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 41 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 29 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 29 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 30 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 30 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 31 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 31 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 32 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 32 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 33 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 33 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 36 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 36 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 41 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 41 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 74 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 74 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 75 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 75 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 76 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 76 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 77 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 77 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 78 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 78 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 82 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 82 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 84 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 84 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 87 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 87 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 88 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 88 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
now in msTX end, the activate_function is: attack0(uint256,bytes4)
END with EOA TX CASE: MessageCallTransaction 14 from sender_14 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
now we have 77 global state (path)!
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
now in msTX end, the activate_function is: attack0(uint256,bytes4)
END with EOA TX CASE: MessageCallTransaction 15 from sender_15 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
now we have 76 global state (path)!
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
now in msTX end, the activate_function is: attack0(uint256,bytes4)
END with EOA TX CASE: MessageCallTransaction 16 from sender_16 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
now we have 75 global state (path)!
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
now in msTX end, the activate_function is: attack0(uint256,bytes4)
END with EOA TX CASE: MessageCallTransaction 17 from sender_17 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
now we have 74 global state (path)!
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
now in msTX end, the activate_function is: attack0(uint256,bytes4)
END with EOA TX CASE: MessageCallTransaction 18 from sender_18 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
now we have 73 global state (path)!
now in msTX end, the activate_function is: attack0(uint256,bytes4)
END with EOA TX CASE: MessageCallTransaction 19 from sender_19 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
now we have 72 global state (path)!
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
now in msTX end, the activate_function is: attack0(uint256,bytes4)
END with EOA TX CASE: MessageCallTransaction 23 from sender_23 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
now we have 71 global state (path)!
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 74 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 74 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 29 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 29 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 75 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 75 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 30 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 30 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 76 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 76 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 31 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 31 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 77 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 77 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 32 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 32 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 78 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 78 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 33 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 33 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 37 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 37 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 84 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 84 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 39 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 39 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 42 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 42 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: fallback
END WITH Internal MessageCALLTX: MessageCallTransaction 88 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef **************************
End Transaction with MessageTX Normally: MessageCallTransaction 88 from 51421440056055728346017419001665401074216449311 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 43 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 43 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 44 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 44 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 45 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 45 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 46 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 46 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 47 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 47 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 48 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 48 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 49 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 49 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 53 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 53 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
unreached path
Now in function: attack0(uint256,bytes4) in contract: AttackBridge
unreached path
Now in function: attack0(uint256,bytes4) in contract: AttackBridge
unreached path
Now in function: attack0(uint256,bytes4) in contract: AttackBridge
unreached path
Now in function: attack0(uint256,bytes4) in contract: AttackBridge
unreached path
Now in function: attack0(uint256,bytes4) in contract: AttackBridge
unreached path
Now in function: attack0(uint256,bytes4) in contract: AttackBridge
unreached path
Now in function: attack0(uint256,bytes4) in contract: AttackBridge
unreached path
Now in function: attack0(uint256,bytes4) in contract: AttackBridge
unreached path
Now in function: attack0(uint256,bytes4) in contract: AttackBridge
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 29 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 29 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 30 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 30 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 31 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 31 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 32 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 32 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 33 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 33 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 39 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 39 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 43 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 43 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
unreached path
Now in function: attack0(uint256,bytes4) in contract: AttackBridge
unreached path
Now in function: attack0(uint256,bytes4) in contract: AttackBridge
unreached path
Now in function: attack0(uint256,bytes4) in contract: AttackBridge
unreached path
Now in function: attack0(uint256,bytes4) in contract: AttackBridge
unreached path
Now in function: attack0(uint256,bytes4) in contract: AttackBridge
unreached path
Now in function: attack0(uint256,bytes4) in contract: AttackBridge
unreached path
Now in function: attack0(uint256,bytes4) in contract: AttackBridge
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
unreached path
Now in function: attacked(uint256,address) in contract: AttackBridge
unreached path
Now in function: attack0(uint256,bytes4) in contract: AttackBridge
unreached path
Now in function: attack0(uint256,bytes4) in contract: AttackBridge
unreached path
Now in function: attack0(uint256,bytes4) in contract: AttackBridge
unreached path
Now in function: attack0(uint256,bytes4) in contract: AttackBridge
unreached path
Now in function: attack0(uint256,bytes4) in contract: AttackBridge
unreached path
Now in function: attack0(uint256,bytes4) in contract: AttackBridge
unreached path
Now in function: attack0(uint256,bytes4) in contract: AttackBridge
unreached path
Now in function: attack0(uint256,bytes4) in contract: AttackBridge
unreached path
Now in function: attack0(uint256,bytes4) in contract: AttackBridge
unreached path
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
unreached path
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
unreached path
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
unreached path
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
unreached path
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
unreached path
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
unreached path
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
unreached path
Now in function: attack0(uint256,bytes4) in contract: AttackBridge
unreached path
Now in function: attack0(uint256,bytes4) in contract: AttackBridge
unreached path
Now in function: attack0(uint256,bytes4) in contract: AttackBridge
unreached path
Now in function: attack0(uint256,bytes4) in contract: AttackBridge
unreached path
Now in function: attack0(uint256,bytes4) in contract: AttackBridge
unreached path
Now in function: attack0(uint256,bytes4) in contract: AttackBridge
unreached path
Now in function: attack0(uint256,bytes4) in contract: AttackBridge
now in msTX end, the activate_function is: attack0(uint256,bytes4)
END with EOA TX CASE: MessageCallTransaction 14 from sender_14 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
now we have 70 global state (path)!
now in msTX end, the activate_function is: attack0(uint256,bytes4)
END with EOA TX CASE: MessageCallTransaction 15 from sender_15 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
now we have 69 global state (path)!
now in msTX end, the activate_function is: attack0(uint256,bytes4)
END with EOA TX CASE: MessageCallTransaction 16 from sender_16 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
now we have 68 global state (path)!
now in msTX end, the activate_function is: attack0(uint256,bytes4)
END with EOA TX CASE: MessageCallTransaction 17 from sender_17 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
now we have 67 global state (path)!
now in msTX end, the activate_function is: attack0(uint256,bytes4)
END with EOA TX CASE: MessageCallTransaction 18 from sender_18 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
now we have 66 global state (path)!
now in msTX end, the activate_function is: attack0(uint256,bytes4)
END with EOA TX CASE: MessageCallTransaction 20 from sender_20 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
now we have 65 global state (path)!
now in msTX end, the activate_function is: attack0(uint256,bytes4)
END with EOA TX CASE: MessageCallTransaction 21 from sender_21 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
now we have 64 global state (path)!
now in msTX end, the activate_function is: attack0(uint256,bytes4)
END with EOA TX CASE: MessageCallTransaction 25 from sender_25 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
now we have 63 global state (path)!
now in msTX end, the activate_function is: attack0(uint256,bytes4)
END with EOA TX CASE: MessageCallTransaction 26 from sender_26 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
now we have 62 global state (path)!
now in msTX end, the activate_function is: attack0(uint256,bytes4)
END with EOA TX CASE: MessageCallTransaction 14 from sender_14 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
now we have 61 global state (path)!
now in msTX end, the activate_function is: attack0(uint256,bytes4)
END with EOA TX CASE: MessageCallTransaction 15 from sender_15 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
now we have 60 global state (path)!
now in msTX end, the activate_function is: attack0(uint256,bytes4)
END with EOA TX CASE: MessageCallTransaction 16 from sender_16 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
now we have 59 global state (path)!
now in msTX end, the activate_function is: attack0(uint256,bytes4)
END with EOA TX CASE: MessageCallTransaction 17 from sender_17 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
now we have 58 global state (path)!
now in msTX end, the activate_function is: attack0(uint256,bytes4)
END with EOA TX CASE: MessageCallTransaction 18 from sender_18 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
now we have 57 global state (path)!
now in msTX end, the activate_function is: attack0(uint256,bytes4)
END with EOA TX CASE: MessageCallTransaction 21 from sender_21 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
now we have 56 global state (path)!
now in msTX end, the activate_function is: attack0(uint256,bytes4)
END with EOA TX CASE: MessageCallTransaction 26 from sender_26 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
now we have 55 global state (path)!
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 44 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 44 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 45 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 45 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 46 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 46 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 47 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 47 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 48 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 48 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 50 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 50 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 51 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 51 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 55 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 55 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 56 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 56 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 44 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 44 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 45 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 45 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 46 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 46 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 47 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 47 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 48 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 48 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 51 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 51 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 56 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 56 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: attack0(uint256,bytes4)
END with EOA TX CASE: MessageCallTransaction 14 from sender_14 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
now we have 54 global state (path)!
now in msTX end, the activate_function is: attack0(uint256,bytes4)
END with EOA TX CASE: MessageCallTransaction 15 from sender_15 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
now we have 53 global state (path)!
now in msTX end, the activate_function is: attack0(uint256,bytes4)
END with EOA TX CASE: MessageCallTransaction 16 from sender_16 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
now we have 52 global state (path)!
now in msTX end, the activate_function is: attack0(uint256,bytes4)
END with EOA TX CASE: MessageCallTransaction 17 from sender_17 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
now we have 51 global state (path)!
now in msTX end, the activate_function is: attack0(uint256,bytes4)
END with EOA TX CASE: MessageCallTransaction 18 from sender_18 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
now we have 50 global state (path)!
now in msTX end, the activate_function is: attack0(uint256,bytes4)
END with EOA TX CASE: MessageCallTransaction 22 from sender_22 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
now we have 49 global state (path)!
now in msTX end, the activate_function is: attack0(uint256,bytes4)
END with EOA TX CASE: MessageCallTransaction 24 from sender_24 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
now we have 48 global state (path)!
now in msTX end, the activate_function is: attack0(uint256,bytes4)
END with EOA TX CASE: MessageCallTransaction 27 from sender_27 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
now we have 47 global state (path)!
now in msTX end, the activate_function is: attack0(uint256,bytes4)
END with EOA TX CASE: MessageCallTransaction 28 from sender_28 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
now we have 46 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 14 from sender_14 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
now we have 45 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 15 from sender_15 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
now we have 44 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 16 from sender_16 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
now we have 43 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 17 from sender_17 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
now we have 42 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 18 from sender_18 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
now we have 41 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 19 from sender_19 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
now we have 40 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 23 from sender_23 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
now we have 39 global state (path)!
now in msTX end, the activate_function is: attack0(uint256,bytes4)
END with EOA TX CASE: MessageCallTransaction 14 from sender_14 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
now we have 38 global state (path)!
now in msTX end, the activate_function is: attack0(uint256,bytes4)
END with EOA TX CASE: MessageCallTransaction 15 from sender_15 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
now we have 37 global state (path)!
now in msTX end, the activate_function is: attack0(uint256,bytes4)
END with EOA TX CASE: MessageCallTransaction 16 from sender_16 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
now we have 36 global state (path)!
now in msTX end, the activate_function is: attack0(uint256,bytes4)
END with EOA TX CASE: MessageCallTransaction 17 from sender_17 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
now we have 35 global state (path)!
now in msTX end, the activate_function is: attack0(uint256,bytes4)
END with EOA TX CASE: MessageCallTransaction 18 from sender_18 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
now we have 34 global state (path)!
now in msTX end, the activate_function is: attack0(uint256,bytes4)
END with EOA TX CASE: MessageCallTransaction 24 from sender_24 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
now we have 33 global state (path)!
now in msTX end, the activate_function is: attack0(uint256,bytes4)
END with EOA TX CASE: MessageCallTransaction 28 from sender_28 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
now we have 32 global state (path)!
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 44 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 44 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 45 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 45 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 46 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 46 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 47 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 47 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 48 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 48 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 52 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 52 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 54 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 54 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 57 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 57 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 58 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 58 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
unreached path
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
unreached path
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
unreached path
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
unreached path
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
unreached path
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
unreached path
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
unreached path
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
unreached path
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
unreached path
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 44 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 44 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 45 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 45 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 46 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 46 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 47 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 47 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 48 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 48 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 54 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 54 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
now in msTX end, the activate_function is: attacked(uint256,address)
END WITH Internal MessageCALLTX: MessageCallTransaction 58 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f **************************
End Transaction with MessageTX Normally: MessageCallTransaction 58 from 1271270613000041655817448348132275889066893754095 to  0x901d12ebe1b195e5aa8748e62bd7734ae19b51f
call_chain is [
['START'], ['EOA', ''], ['AttackBridge', []], ['END']]
unreached path
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
unreached path
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
unreached path
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
unreached path
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
unreached path
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
unreached path
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
unreached path
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
unreached path
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
unreached path
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
unreached path
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
unreached path
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
unreached path
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
unreached path
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
unreached path
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
unreached path
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
unreached path
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
unreached path
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
unreached path
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
unreached path
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
unreached path
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
unreached path
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
unreached path
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
unreached path
Now in function: attack1(uint256,bytes4,bytes32) in contract: AttackBridge
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 14 from sender_14 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
now we have 31 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 15 from sender_15 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
now we have 30 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 16 from sender_16 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
now we have 29 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 17 from sender_17 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
now we have 28 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 18 from sender_18 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
now we have 27 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 20 from sender_20 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
now we have 26 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 21 from sender_21 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
now we have 25 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 25 from sender_25 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
now we have 24 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 26 from sender_26 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
now we have 23 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 14 from sender_14 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
now we have 22 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 15 from sender_15 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
now we have 21 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 16 from sender_16 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
now we have 20 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 17 from sender_17 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
now we have 19 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 18 from sender_18 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
now we have 18 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 21 from sender_21 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
now we have 17 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 26 from sender_26 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
now we have 16 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 14 from sender_14 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
now we have 15 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 15 from sender_15 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
now we have 14 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 16 from sender_16 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
now we have 13 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 17 from sender_17 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
now we have 12 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 18 from sender_18 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
now we have 11 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 22 from sender_22 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
now we have 10 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 24 from sender_24 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
now we have 9 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 27 from sender_27 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
now we have 8 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 28 from sender_28 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
now we have 7 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 14 from sender_14 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
now we have 6 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 15 from sender_15 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
now we have 5 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 16 from sender_16 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
now we have 4 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 17 from sender_17 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
now we have 3 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 18 from sender_18 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
now we have 2 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 24 from sender_24 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
now we have 1 global state (path)!
now in msTX end, the activate_function is: attack1(uint256,bytes4,bytes32)
END with EOA TX CASE: MessageCallTransaction 28 from sender_28 to 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef ***********
output EOA case global_state: [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
End Transaction with EOA TX:  [%s]
call_chain is [
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
Excute 1 TX Loop finish!!!
output the call_chain
++++++++++++++++++++ In 0th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
++++++++++++++++++++ In 1th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
++++++++++++++++++++ In 2th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
++++++++++++++++++++ In 3th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
++++++++++++++++++++ In 4th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
++++++++++++++++++++ In 5th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
++++++++++++++++++++ In 6th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
++++++++++++++++++++ In 7th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
++++++++++++++++++++ In 8th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
++++++++++++++++++++ In 9th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
++++++++++++++++++++ In 10th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
++++++++++++++++++++ In 11th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
++++++++++++++++++++ In 12th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
++++++++++++++++++++ In 13th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
++++++++++++++++++++ In 14th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
++++++++++++++++++++ In 15th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
++++++++++++++++++++ In 16th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
++++++++++++++++++++ In 17th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
++++++++++++++++++++ In 18th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
++++++++++++++++++++ In 19th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
++++++++++++++++++++ In 20th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
++++++++++++++++++++ In 21th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
++++++++++++++++++++ In 22th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
++++++++++++++++++++ In 23th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
++++++++++++++++++++ In 24th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
++++++++++++++++++++ In 25th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
++++++++++++++++++++ In 26th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
++++++++++++++++++++ In 27th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
++++++++++++++++++++ In 28th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
++++++++++++++++++++ In 29th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
++++++++++++++++++++ In 30th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 31th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 32th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 33th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 34th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 35th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 36th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 37th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 38th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 39th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 40th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 41th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 42th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 43th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 44th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 45th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 46th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 47th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 48th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 49th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 50th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 51th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 52th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 53th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 54th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 55th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 56th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 57th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 58th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 59th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 60th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
++++++++++++++++++++ In 61th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
++++++++++++++++++++ In 62th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
++++++++++++++++++++ In 63th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
++++++++++++++++++++ In 64th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
++++++++++++++++++++ In 65th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
++++++++++++++++++++ In 66th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
++++++++++++++++++++ In 67th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
++++++++++++++++++++ In 68th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
++++++++++++++++++++ In 69th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
++++++++++++++++++++ In 70th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
++++++++++++++++++++ In 71th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
++++++++++++++++++++ In 72th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
++++++++++++++++++++ In 73th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
++++++++++++++++++++ In 74th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
++++++++++++++++++++ In 75th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 76th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 77th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 78th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 79th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 80th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 81th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 82th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 83th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 84th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 85th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 86th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 87th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 88th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 89th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 90th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 91th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
++++++++++++++++++++ In 92th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
++++++++++++++++++++ In 93th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
++++++++++++++++++++ In 94th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
++++++++++++++++++++ In 95th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
++++++++++++++++++++ In 96th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
++++++++++++++++++++ In 97th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
++++++++++++++++++++ In 98th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 99th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 100th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 101th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 102th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 103th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 104th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 105th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 106th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 107th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 108th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 109th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 110th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 111th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 112th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 113th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 114th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
++++++++++++++++++++ In 115th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
++++++++++++++++++++ In 116th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
++++++++++++++++++++ In 117th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
++++++++++++++++++++ In 118th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
++++++++++++++++++++ In 119th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
++++++++++++++++++++ In 120th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
++++++++++++++++++++ In 121th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 122th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 123th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 124th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 125th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 126th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 127th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 128th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 129th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 130th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
++++++++++++++++++++ In 131th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
++++++++++++++++++++ In 132th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
++++++++++++++++++++ In 133th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
++++++++++++++++++++ In 134th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
++++++++++++++++++++ In 135th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
++++++++++++++++++++ In 136th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
++++++++++++++++++++ In 137th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 138th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 139th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 140th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 141th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 142th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 143th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 144th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 145th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
++++++++++++++++++++ In 146th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
++++++++++++++++++++ In 147th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
++++++++++++++++++++ In 148th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
++++++++++++++++++++ In 149th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
++++++++++++++++++++ In 150th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
++++++++++++++++++++ In 151th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
++++++++++++++++++++ In 152th open_state ++++++++++++++++++++
    -------- output 0th TX --------
[
['START'], ['EOA', 'None'], ['MAIN', 'constructor'], ['END']]
    -------- output 1th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'constructor'], ['END']]
    -------- output 2th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
    -------- output 3th TX --------
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
Finished symbolic execution


================ Print openstates call_chain ================
print 0th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
----------------------------------------------------
print 1th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
----------------------------------------------------
print 2th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
----------------------------------------------------
print 3th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
----------------------------------------------------
print 4th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
----------------------------------------------------
print 5th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
----------------------------------------------------
print 6th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
----------------------------------------------------
print 7th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
----------------------------------------------------
print 8th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
----------------------------------------------------
print 9th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
----------------------------------------------------
print 10th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
----------------------------------------------------
print 11th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
----------------------------------------------------
print 12th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
----------------------------------------------------
print 13th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
----------------------------------------------------
print 14th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
----------------------------------------------------
print 15th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
----------------------------------------------------
print 16th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
----------------------------------------------------
print 17th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
----------------------------------------------------
print 18th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
----------------------------------------------------
print 19th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
----------------------------------------------------
print 20th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
----------------------------------------------------
print 21th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
----------------------------------------------------
print 22th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
----------------------------------------------------
print 23th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
----------------------------------------------------
print 24th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
----------------------------------------------------
print 25th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
----------------------------------------------------
print 26th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
----------------------------------------------------
print 27th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
----------------------------------------------------
print 28th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
----------------------------------------------------
print 29th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'fallback'], ['END']]
----------------------------------------------------
print 30th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 31th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 32th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 33th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 34th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 35th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 36th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 37th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 38th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 39th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 40th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 41th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 42th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 43th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 44th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 45th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 46th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 47th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 48th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 49th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 50th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 51th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 52th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 53th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 54th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 55th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 56th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 57th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 58th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 59th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 60th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
----------------------------------------------------
print 61th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
----------------------------------------------------
print 62th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
----------------------------------------------------
print 63th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
----------------------------------------------------
print 64th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
----------------------------------------------------
print 65th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
----------------------------------------------------
print 66th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
----------------------------------------------------
print 67th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
----------------------------------------------------
print 68th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
----------------------------------------------------
print 69th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
----------------------------------------------------
print 70th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
----------------------------------------------------
print 71th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
----------------------------------------------------
print 72th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
----------------------------------------------------
print 73th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
----------------------------------------------------
print 74th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END']]
----------------------------------------------------
print 75th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 76th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 77th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 78th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 79th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 80th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 81th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 82th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 83th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 84th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 85th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 86th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 87th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 88th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 89th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 90th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 91th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
----------------------------------------------------
print 92th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
----------------------------------------------------
print 93th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
----------------------------------------------------
print 94th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
----------------------------------------------------
print 95th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
----------------------------------------------------
print 96th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
----------------------------------------------------
print 97th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
----------------------------------------------------
print 98th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 99th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 100th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 101th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 102th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 103th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 104th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 105th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 106th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 107th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 108th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 109th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 110th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 111th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 112th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 113th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 114th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
----------------------------------------------------
print 115th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
----------------------------------------------------
print 116th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
----------------------------------------------------
print 117th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
----------------------------------------------------
print 118th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
----------------------------------------------------
print 119th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
----------------------------------------------------
print 120th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['END'], 
['START'], ['AttackBridge', 'attack0(uint256,bytes4)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
----------------------------------------------------
print 121th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 122th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 123th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 124th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 125th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 126th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 127th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 128th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 129th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 130th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
----------------------------------------------------
print 131th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
----------------------------------------------------
print 132th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
----------------------------------------------------
print 133th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
----------------------------------------------------
print 134th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
----------------------------------------------------
print 135th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
----------------------------------------------------
print 136th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
----------------------------------------------------
print 137th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 138th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 139th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 140th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 141th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 142th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 143th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 144th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 145th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END'], 
['START'], ['AttackBridge', 'fallback'], ['MAIN', 'fallback'], ['END']]
----------------------------------------------------
print 146th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
----------------------------------------------------
print 147th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
----------------------------------------------------
print 148th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
----------------------------------------------------
print 149th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
----------------------------------------------------
print 150th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
----------------------------------------------------
print 151th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
----------------------------------------------------
print 152th world_state`s call_chain
[
['START'], ['EOA', 'None'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['END'], 
['START'], ['AttackBridge', 'attack1(uint256,bytes4,bytes32)'], ['MAIN', 'attacked(uint256,address)'], ['END'], 
['START'], ['MAIN', 'attacked(uint256,address)'], ['AttackBridge', 'fallback'], ['END']]
----------------------------------------------------


================ Print openstates call_chain finish ================
print report in [0]th open_state
The analysis was completed successfully. No issues were detected.

print report in [1]th open_state
The analysis was completed successfully. No issues were detected.

print report in [2]th open_state
The analysis was completed successfully. No issues were detected.

print report in [3]th open_state
The analysis was completed successfully. No issues were detected.

print report in [4]th open_state
The analysis was completed successfully. No issues were detected.

print report in [5]th open_state
The analysis was completed successfully. No issues were detected.

print report in [6]th open_state
The analysis was completed successfully. No issues were detected.

print report in [7]th open_state
The analysis was completed successfully. No issues were detected.

print report in [8]th open_state
The analysis was completed successfully. No issues were detected.

print report in [9]th open_state
The analysis was completed successfully. No issues were detected.

print report in [10]th open_state
The analysis was completed successfully. No issues were detected.

print report in [11]th open_state
The analysis was completed successfully. No issues were detected.

print report in [12]th open_state
The analysis was completed successfully. No issues were detected.

print report in [13]th open_state
The analysis was completed successfully. No issues were detected.

print report in [14]th open_state
The analysis was completed successfully. No issues were detected.

print report in [15]th open_state
The analysis was completed successfully. No issues were detected.

print report in [16]th open_state
The analysis was completed successfully. No issues were detected.

print report in [17]th open_state
The analysis was completed successfully. No issues were detected.

print report in [18]th open_state
The analysis was completed successfully. No issues were detected.

print report in [19]th open_state
The analysis was completed successfully. No issues were detected.

print report in [20]th open_state
The analysis was completed successfully. No issues were detected.

print report in [21]th open_state
The analysis was completed successfully. No issues were detected.

print report in [22]th open_state
The analysis was completed successfully. No issues were detected.

print report in [23]th open_state
The analysis was completed successfully. No issues were detected.

print report in [24]th open_state
The analysis was completed successfully. No issues were detected.

print report in [25]th open_state
The analysis was completed successfully. No issues were detected.

print report in [26]th open_state
The analysis was completed successfully. No issues were detected.

print report in [27]th open_state
The analysis was completed successfully. No issues were detected.

print report in [28]th open_state
The analysis was completed successfully. No issues were detected.

print report in [29]th open_state
The analysis was completed successfully. No issues were detected.

print report in [30]th open_state
The analysis was completed successfully. No issues were detected.

print report in [31]th open_state
The analysis was completed successfully. No issues were detected.

print report in [32]th open_state
The analysis was completed successfully. No issues were detected.

print report in [33]th open_state
The analysis was completed successfully. No issues were detected.

print report in [34]th open_state
The analysis was completed successfully. No issues were detected.

print report in [35]th open_state
The analysis was completed successfully. No issues were detected.

print report in [36]th open_state
The analysis was completed successfully. No issues were detected.

print report in [37]th open_state
The analysis was completed successfully. No issues were detected.

print report in [38]th open_state
The analysis was completed successfully. No issues were detected.

print report in [39]th open_state
The analysis was completed successfully. No issues were detected.

print report in [40]th open_state
The analysis was completed successfully. No issues were detected.

print report in [41]th open_state
The analysis was completed successfully. No issues were detected.

print report in [42]th open_state
The analysis was completed successfully. No issues were detected.

print report in [43]th open_state
The analysis was completed successfully. No issues were detected.

print report in [44]th open_state
The analysis was completed successfully. No issues were detected.

print report in [45]th open_state
The analysis was completed successfully. No issues were detected.

print report in [46]th open_state
The analysis was completed successfully. No issues were detected.

print report in [47]th open_state
The analysis was completed successfully. No issues were detected.

print report in [48]th open_state
The analysis was completed successfully. No issues were detected.

print report in [49]th open_state
The analysis was completed successfully. No issues were detected.

print report in [50]th open_state
The analysis was completed successfully. No issues were detected.

print report in [51]th open_state
The analysis was completed successfully. No issues were detected.

print report in [52]th open_state
The analysis was completed successfully. No issues were detected.

print report in [53]th open_state
The analysis was completed successfully. No issues were detected.

print report in [54]th open_state
The analysis was completed successfully. No issues were detected.

print report in [55]th open_state
The analysis was completed successfully. No issues were detected.

print report in [56]th open_state
The analysis was completed successfully. No issues were detected.

print report in [57]th open_state
The analysis was completed successfully. No issues were detected.

print report in [58]th open_state
The analysis was completed successfully. No issues were detected.

print report in [59]th open_state
The analysis was completed successfully. No issues were detected.

print report in [60]th open_state
The analysis was completed successfully. No issues were detected.

print report in [61]th open_state
The analysis was completed successfully. No issues were detected.

print report in [62]th open_state
The analysis was completed successfully. No issues were detected.

print report in [63]th open_state
The analysis was completed successfully. No issues were detected.

print report in [64]th open_state
The analysis was completed successfully. No issues were detected.

print report in [65]th open_state
The analysis was completed successfully. No issues were detected.

print report in [66]th open_state
The analysis was completed successfully. No issues were detected.

print report in [67]th open_state
The analysis was completed successfully. No issues were detected.

print report in [68]th open_state
The analysis was completed successfully. No issues were detected.

print report in [69]th open_state
The analysis was completed successfully. No issues were detected.

print report in [70]th open_state
The analysis was completed successfully. No issues were detected.

print report in [71]th open_state
The analysis was completed successfully. No issues were detected.

print report in [72]th open_state
The analysis was completed successfully. No issues were detected.

print report in [73]th open_state
The analysis was completed successfully. No issues were detected.

print report in [74]th open_state
The analysis was completed successfully. No issues were detected.

print report in [75]th open_state
The analysis was completed successfully. No issues were detected.

print report in [76]th open_state
The analysis was completed successfully. No issues were detected.

print report in [77]th open_state
The analysis was completed successfully. No issues were detected.

print report in [78]th open_state
The analysis was completed successfully. No issues were detected.

print report in [79]th open_state
The analysis was completed successfully. No issues were detected.

print report in [80]th open_state
The analysis was completed successfully. No issues were detected.

print report in [81]th open_state
The analysis was completed successfully. No issues were detected.

print report in [82]th open_state
The analysis was completed successfully. No issues were detected.

print report in [83]th open_state
The analysis was completed successfully. No issues were detected.

print report in [84]th open_state
The analysis was completed successfully. No issues were detected.

print report in [85]th open_state
The analysis was completed successfully. No issues were detected.

print report in [86]th open_state
The analysis was completed successfully. No issues were detected.

print report in [87]th open_state
The analysis was completed successfully. No issues were detected.

print report in [88]th open_state
The analysis was completed successfully. No issues were detected.

print report in [89]th open_state
The analysis was completed successfully. No issues were detected.

print report in [90]th open_state
The analysis was completed successfully. No issues were detected.

print report in [91]th open_state
The analysis was completed successfully. No issues were detected.

print report in [92]th open_state
The analysis was completed successfully. No issues were detected.

print report in [93]th open_state
The analysis was completed successfully. No issues were detected.

print report in [94]th open_state
The analysis was completed successfully. No issues were detected.

print report in [95]th open_state
The analysis was completed successfully. No issues were detected.

print report in [96]th open_state
The analysis was completed successfully. No issues were detected.

print report in [97]th open_state
The analysis was completed successfully. No issues were detected.

print report in [98]th open_state
The analysis was completed successfully. No issues were detected.

print report in [99]th open_state
The analysis was completed successfully. No issues were detected.

print report in [100]th open_state
The analysis was completed successfully. No issues were detected.

print report in [101]th open_state
The analysis was completed successfully. No issues were detected.

print report in [102]th open_state
The analysis was completed successfully. No issues were detected.

print report in [103]th open_state
The analysis was completed successfully. No issues were detected.

print report in [104]th open_state
The analysis was completed successfully. No issues were detected.

print report in [105]th open_state
The analysis was completed successfully. No issues were detected.

print report in [106]th open_state
The analysis was completed successfully. No issues were detected.

print report in [107]th open_state
The analysis was completed successfully. No issues were detected.

print report in [108]th open_state
The analysis was completed successfully. No issues were detected.

print report in [109]th open_state
The analysis was completed successfully. No issues were detected.

print report in [110]th open_state
The analysis was completed successfully. No issues were detected.

print report in [111]th open_state
The analysis was completed successfully. No issues were detected.

print report in [112]th open_state
The analysis was completed successfully. No issues were detected.

print report in [113]th open_state
The analysis was completed successfully. No issues were detected.

print report in [114]th open_state
The analysis was completed successfully. No issues were detected.

print report in [115]th open_state
The analysis was completed successfully. No issues were detected.

print report in [116]th open_state
The analysis was completed successfully. No issues were detected.

print report in [117]th open_state
The analysis was completed successfully. No issues were detected.

print report in [118]th open_state
The analysis was completed successfully. No issues were detected.

print report in [119]th open_state
The analysis was completed successfully. No issues were detected.

print report in [120]th open_state
The analysis was completed successfully. No issues were detected.

print report in [121]th open_state
The analysis was completed successfully. No issues were detected.

print report in [122]th open_state
The analysis was completed successfully. No issues were detected.

print report in [123]th open_state
The analysis was completed successfully. No issues were detected.

print report in [124]th open_state
The analysis was completed successfully. No issues were detected.

print report in [125]th open_state
The analysis was completed successfully. No issues were detected.

print report in [126]th open_state
The analysis was completed successfully. No issues were detected.

print report in [127]th open_state
The analysis was completed successfully. No issues were detected.

print report in [128]th open_state
The analysis was completed successfully. No issues were detected.

print report in [129]th open_state
The analysis was completed successfully. No issues were detected.

print report in [130]th open_state
The analysis was completed successfully. No issues were detected.

print report in [131]th open_state
The analysis was completed successfully. No issues were detected.

print report in [132]th open_state
The analysis was completed successfully. No issues were detected.

print report in [133]th open_state
The analysis was completed successfully. No issues were detected.

print report in [134]th open_state
The analysis was completed successfully. No issues were detected.

print report in [135]th open_state
The analysis was completed successfully. No issues were detected.

print report in [136]th open_state
The analysis was completed successfully. No issues were detected.

print report in [137]th open_state
The analysis was completed successfully. No issues were detected.

print report in [138]th open_state
The analysis was completed successfully. No issues were detected.

print report in [139]th open_state
The analysis was completed successfully. No issues were detected.

print report in [140]th open_state
The analysis was completed successfully. No issues were detected.

print report in [141]th open_state
The analysis was completed successfully. No issues were detected.

print report in [142]th open_state
The analysis was completed successfully. No issues were detected.

print report in [143]th open_state
The analysis was completed successfully. No issues were detected.

print report in [144]th open_state
The analysis was completed successfully. No issues were detected.

print report in [145]th open_state
The analysis was completed successfully. No issues were detected.

print report in [146]th open_state
The analysis was completed successfully. No issues were detected.

print report in [147]th open_state
The analysis was completed successfully. No issues were detected.

print report in [148]th open_state
The analysis was completed successfully. No issues were detected.

print report in [149]th open_state
The analysis was completed successfully. No issues were detected.

print report in [150]th open_state
The analysis was completed successfully. No issues were detected.

print report in [151]th open_state
The analysis was completed successfully. No issues were detected.

print report in [152]th open_state
The analysis was completed successfully. No issues were detected.

time cost [1071s]
