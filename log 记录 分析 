开始 


每次遇见 jumpi 如果发现 跳转的是 函数选择器 那么 记录 "TXid+合约+函数名"

所以 当合约结束的时候 如果 查找 transaction sequence 那么

global_state.current_transaction 动作是 读取 当前 globa_state.transaction_stack 

情况 1: 当 执行 _setup_global_state_for_execution的时候 
		会在里面执行 global_state.transaction_stack.append((transaction, None)) 
情况 2: 在 messagecallstart 的时候 也会执行 增加 

另外 _setup_global_state_for_execution 的时候也会 
global_state.world_state.transaction_sequence.append(transaction)

End Transaction with MessageTX Normally 的情况 返回的 transaction.call_chain 都是空 



**** End Transaction with Revert 竟然没有这种情况!!! 

由于 transaction_stack 和 transaction_sequence 都是在创建 TX 的早期创立的, 
所以 后期查询的时候 不会有结果, 

?? 那如果是 后面 txStart_signal 的时候建立的呢? 

不论 creation 还是 messagecall 都是会 执行这个函数然后添加 transaction 到 sequence 里面的
这意味着 world_state.transaction_sequence里面装着 包含 creationTX 和 messagecallTX

发现问题: 

我正常 call 一个对象的时候对吧 我要放一些 符号表达式 比如我要 call 比如 栈里面负责 存储 谁 以及 什么函数等 
解决
